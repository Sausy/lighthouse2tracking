/********************************************************************************
** Form generated from reading UI file 'darkroom_rqt.ui'
**
** Created by: Qt User Interface Compiler version 5.9.5
**
** WARNING! All changes made in this file will be lost when recompiling UI file!
********************************************************************************/

#ifndef UI_DARKROOM_RQT_H
#define UI_DARKROOM_RQT_H

#include <QtCore/QLocale>
#include <QtCore/QVariant>
#include <QtWidgets/QAction>
#include <QtWidgets/QApplication>
#include <QtWidgets/QButtonGroup>
#include <QtWidgets/QCheckBox>
#include <QtWidgets/QFrame>
#include <QtWidgets/QHeaderView>
#include <QtWidgets/QLabel>
#include <QtWidgets/QLineEdit>
#include <QtWidgets/QPushButton>
#include <QtWidgets/QScrollArea>
#include <QtWidgets/QSlider>
#include <QtWidgets/QSpinBox>
#include <QtWidgets/QTabWidget>
#include <QtWidgets/QTreeView>
#include <QtWidgets/QWidget>
#include "qcustomplot.h"

QT_BEGIN_NAMESPACE

class Ui_RoboyDarkRoom
{
public:
    QLabel *header;
    QTabWidget *tabWidget;
    QWidget *tab;
    QFrame *frame_3;
    QPushButton *show_rays;
    QPushButton *show_distances;
    QPushButton *clear_all;
    QFrame *frame_2;
    QPushButton *connect_roboy;
    QPushButton *connect_object;
    QLineEdit *broadcast_ip;
    QLineEdit *broadcast_port;
    QFrame *frame_4;
    QPushButton *pose_correction_least_squares;
    QPushButton *use_steamVR_lighthouse_poses;
    QPushButton *compare_to_steamVR;
    QPushButton *reset_lighthouse_poses;
    QPushButton *switch_lighthouses;
    QPushButton *record;
    QPushButton *align_to_vive_controller;
    QFrame *frame_9;
    QPushButton *object_pose_estimation_least_squares;
    QPushButton *pose_estimation_relativ_sensor_distances;
    QPushButton *pose_estimation_epnp;
    QPushButton *pose_estimation_multi_lighthouse;
    QFrame *frame_10;
    QPushButton *triangulate;
    QPushButton *position_estimation_relativ_sensor_distances;
    QPushButton *calibrate_relative_distances;
    QFrame *frame_11;
    QCheckBox *random_pose_pitch;
    QCheckBox *random_pose;
    QCheckBox *random_pose_yaw;
    QCheckBox *simulate;
    QSlider *random_pose_slider;
    QCheckBox *random_pose_y;
    QCheckBox *random_pose_x;
    QCheckBox *random_pose_roll;
    QPushButton *reset_pose;
    QCheckBox *random_pose_z;
    QWidget *tab_6;
    QFrame *frame_5;
    QLabel *lighthouse_1;
    QLabel *x_1;
    QLineEdit *lighthouse_firmware_version_1;
    QLineEdit *lighthouse_protocol_version_1;
    QLabel *x_3;
    QLineEdit *lighthouse_ID_1;
    QLabel *x_4;
    QLineEdit *lighthouse_hardware_version_1;
    QLabel *x_5;
    QLineEdit *lighthouse_acc_x_1;
    QLabel *x_6;
    QLabel *x_7;
    QLineEdit *lighthouse_acc_y_1;
    QLabel *x_8;
    QLineEdit *lighthouse_acc_z_1;
    QLabel *x_9;
    QLineEdit *lighthouse_selected_mode_1;
    QLabel *x_37;
    QLineEdit *lighthouse_fault_detect_flags_1;
    QLabel *x_38;
    QLabel *x_39;
    QLineEdit *lighthouse_phase0_1;
    QLabel *x_40;
    QLineEdit *lighthouse_phase1_1;
    QLabel *x_41;
    QLineEdit *lighthouse_tilt1_1;
    QLineEdit *lighthouse_tilt0_1;
    QLabel *x_42;
    QLabel *x_43;
    QLineEdit *lighthouse_gibmag0_1;
    QLabel *x_44;
    QLabel *x_45;
    QLineEdit *lighthouse_gibmag1_1;
    QLineEdit *lighthouse_gibphase1_1;
    QLineEdit *lighthouse_gibphase0_1;
    QLabel *x_46;
    QLineEdit *lighthouse_desync_counter_1;
    QLineEdit *lighthouse_curve1_1;
    QLineEdit *lighthouse_curve0_1;
    QLabel *x_57;
    QLabel *x_58;
    QPushButton *lighthouse_use_phase_1;
    QPushButton *lighthouse_use_tilt_1;
    QPushButton *lighthouse_use_curve_1;
    QPushButton *lighthouse_use_gibbous_1;
    QFrame *frame_7;
    QLabel *lighthouse_2;
    QLabel *x_2;
    QLineEdit *lighthouse_firmware_version_2;
    QLineEdit *lighthouse_protocol_version_2;
    QLabel *x_10;
    QLineEdit *lighthouse_ID_2;
    QLabel *x_11;
    QLineEdit *lighthouse_hardware_version_2;
    QLabel *x_12;
    QLineEdit *lighthouse_acc_x_2;
    QLabel *x_13;
    QLabel *x_14;
    QLineEdit *lighthouse_acc_y_2;
    QLabel *x_15;
    QLineEdit *lighthouse_acc_z_2;
    QLabel *x_16;
    QLineEdit *lighthouse_selected_mode_2;
    QLineEdit *lighthouse_fault_detect_flags_2;
    QLabel *x_47;
    QLabel *x_48;
    QLabel *x_49;
    QLabel *x_50;
    QLabel *x_51;
    QLabel *x_52;
    QLabel *x_53;
    QLabel *x_54;
    QLabel *x_55;
    QLabel *x_56;
    QLineEdit *lighthouse_tilt0_2;
    QLineEdit *lighthouse_gibphase1_2;
    QLineEdit *lighthouse_gibmag1_2;
    QLineEdit *lighthouse_tilt1_2;
    QLineEdit *lighthouse_phase1_2;
    QLineEdit *lighthouse_gibphase0_2;
    QLineEdit *lighthouse_gibmag0_2;
    QLineEdit *lighthouse_phase0_2;
    QLineEdit *lighthouse_desync_counter_2;
    QLabel *x_59;
    QLineEdit *lighthouse_curve0_2;
    QLabel *x_60;
    QLineEdit *lighthouse_curve1_2;
    QPushButton *lighthouse_use_phase_2;
    QPushButton *lighthouse_use_tilt_2;
    QPushButton *lighthouse_use_curve_2;
    QPushButton *lighthouse_use_gibbous_2;
    QPushButton *switch_lighthouse_calibration_values;
    QWidget *tab_2;
    QCustomPlot *horizontal_angle_lighthouse_1;
    QLabel *label;
    QSpinBox *sensor_selector;
    QLabel *sensor_selector_label;
    QCustomPlot *vertical_angle_lighthouse_1;
    QLabel *label_2;
    QCustomPlot *vertical_angle_lighthouse_2;
    QLabel *label_3;
    QCustomPlot *horizontal_angle_lighthouse_2;
    QLabel *label_4;
    QWidget *tab_3;
    QCustomPlot *update_frequencies_horizontal_lighthouse_1;
    QLabel *label_5;
    QCustomPlot *update_frequencies_vertical_lighthouse_1;
    QLabel *label_7;
    QCustomPlot *update_frequencies_horizontal_lighthouse_2;
    QLabel *label_6;
    QCustomPlot *update_frequencies_vertical_lighthouse_2;
    QLabel *label_8;
    QWidget *tab_4;
    QTreeView *tracked_object_browser;
    QWidget *tab_5;
    QFrame *frame_6;
    QLabel *lighthouse_3;
    QLabel *x_17;
    QLineEdit *lighthouse_phase_horizontal_1;
    QLineEdit *lighthouse_phase_vertical_1;
    QLabel *x_18;
    QLineEdit *lighthouse_tilt_horizontal_1;
    QLabel *x_19;
    QLineEdit *lighthouse_tilt_vertical_1;
    QLabel *x_20;
    QLineEdit *lighthouse_curve_horizontal_1;
    QLabel *x_21;
    QLabel *x_22;
    QLineEdit *lighthouse_curve_vertical_1;
    QLabel *x_23;
    QLineEdit *lighthouse_gibphase_horizontal_1;
    QLineEdit *lighthouse_gibphase_vertical_1;
    QLabel *x_25;
    QLineEdit *lighthouse_gibmag_vertical_1;
    QLineEdit *lighthouse_gibmag_horizontal_1;
    QLabel *x_24;
    QLabel *x_26;
    QSlider *lighthouse_phase_horizontal_slider_1;
    QSlider *lighthouse_phase_vertical_slider_1;
    QSlider *lighthouse_tilt_horizontal_slider_1;
    QSlider *lighthouse_tilt_vertical_slider_1;
    QSlider *lighthouse_curve_horizontal_slider_1;
    QSlider *lighthouse_curve_vertical_slider_1;
    QSlider *lighthouse_gibmag_horizontal_slider_1;
    QSlider *lighthouse_gibphase_vertical_slider_1;
    QSlider *lighthouse_gibphase_horizontal_slider_1;
    QSlider *lighthouse_gibmag_vertical_slider_1;
    QPushButton *estimate_factory_calibration_values;
    QPushButton *reset_factory_calibration_values;
    QCheckBox *estimate_lighthouse_1;
    QPushButton *estimate_factory_calibration_values_epnp;
    QPushButton *estimate_factory_calibration_values_multi;
    QFrame *frame_8;
    QLabel *lighthouse_4;
    QLabel *x_27;
    QLineEdit *lighthouse_phase_horizontal_2;
    QLineEdit *lighthouse_phase_vertical_2;
    QLabel *x_28;
    QLineEdit *lighthouse_tilt_horizontal_2;
    QLabel *x_29;
    QLineEdit *lighthouse_tilt_vertical_2;
    QLabel *x_30;
    QLineEdit *lighthouse_curve_horizontal_2;
    QLabel *x_31;
    QLabel *x_32;
    QLineEdit *lighthouse_curve_vertical_2;
    QLabel *x_33;
    QLineEdit *lighthouse_gibphase_horizontal_2;
    QLineEdit *lighthouse_gibphase_vertical_2;
    QLabel *x_34;
    QLineEdit *lighthouse_gibmag_vertical_2;
    QLineEdit *lighthouse_gibmag_horizontal_2;
    QLabel *x_35;
    QLabel *x_36;
    QSlider *lighthouse_curve_vertical_slider_2;
    QSlider *lighthouse_phase_horizontal_slider_2;
    QSlider *lighthouse_curve_horizontal_slider_2;
    QSlider *lighthouse_tilt_vertical_slider_2;
    QSlider *lighthouse_phase_vertical_slider_2;
    QSlider *lighthouse_tilt_horizontal_slider_2;
    QSlider *lighthouse_gibphase_horizontal_slider_2;
    QSlider *lighthouse_gibmag_vertical_slider_2;
    QSlider *lighthouse_gibphase_vertical_slider_2;
    QSlider *lighthouse_gibmag_horizontal_slider_2;
    QCheckBox *estimate_lighthouse_2;
    QFrame *frame;
    QPushButton *remove_tracked_object;
    QPushButton *add_tracked_object;
    QScrollArea *tracked_objects;
    QWidget *scrollAreaWidgetContents;
    QLabel *label_9;

    void setupUi(QWidget *RoboyDarkRoom)
    {
        if (RoboyDarkRoom->objectName().isEmpty())
            RoboyDarkRoom->setObjectName(QStringLiteral("RoboyDarkRoom"));
        RoboyDarkRoom->resize(902, 668);
        header = new QLabel(RoboyDarkRoom);
        header->setObjectName(QStringLiteral("header"));
        header->setGeometry(QRect(10, 10, 321, 31));
        QFont font;
        font.setPointSize(12);
        font.setBold(true);
        font.setItalic(false);
        font.setWeight(75);
        header->setFont(font);
        tabWidget = new QTabWidget(RoboyDarkRoom);
        tabWidget->setObjectName(QStringLiteral("tabWidget"));
        tabWidget->setGeometry(QRect(10, 40, 591, 611));
        tab = new QWidget();
        tab->setObjectName(QStringLiteral("tab"));
        frame_3 = new QFrame(tab);
        frame_3->setObjectName(QStringLiteral("frame_3"));
        frame_3->setGeometry(QRect(0, 80, 291, 111));
        frame_3->setFrameShape(QFrame::StyledPanel);
        frame_3->setFrameShadow(QFrame::Raised);
        show_rays = new QPushButton(frame_3);
        show_rays->setObjectName(QStringLiteral("show_rays"));
        show_rays->setGeometry(QRect(10, 10, 271, 27));
        show_rays->setCheckable(true);
        show_distances = new QPushButton(frame_3);
        show_distances->setObjectName(QStringLiteral("show_distances"));
        show_distances->setGeometry(QRect(10, 40, 271, 27));
        show_distances->setCheckable(true);
        clear_all = new QPushButton(frame_3);
        clear_all->setObjectName(QStringLiteral("clear_all"));
        clear_all->setGeometry(QRect(10, 70, 271, 27));
        frame_2 = new QFrame(tab);
        frame_2->setObjectName(QStringLiteral("frame_2"));
        frame_2->setGeometry(QRect(0, 0, 291, 81));
        frame_2->setFrameShape(QFrame::StyledPanel);
        frame_2->setFrameShadow(QFrame::Raised);
        connect_roboy = new QPushButton(frame_2);
        connect_roboy->setObjectName(QStringLiteral("connect_roboy"));
        connect_roboy->setGeometry(QRect(10, 10, 271, 29));
        connect_object = new QPushButton(frame_2);
        connect_object->setObjectName(QStringLiteral("connect_object"));
        connect_object->setGeometry(QRect(10, 40, 81, 29));
        broadcast_ip = new QLineEdit(frame_2);
        broadcast_ip->setObjectName(QStringLiteral("broadcast_ip"));
        broadcast_ip->setGeometry(QRect(90, 40, 131, 31));
        broadcast_port = new QLineEdit(frame_2);
        broadcast_port->setObjectName(QStringLiteral("broadcast_port"));
        broadcast_port->setGeometry(QRect(220, 40, 61, 31));
        frame_4 = new QFrame(tab);
        frame_4->setObjectName(QStringLiteral("frame_4"));
        frame_4->setGeometry(QRect(0, 190, 291, 231));
        frame_4->setFrameShape(QFrame::StyledPanel);
        frame_4->setFrameShadow(QFrame::Raised);
        pose_correction_least_squares = new QPushButton(frame_4);
        pose_correction_least_squares->setObjectName(QStringLiteral("pose_correction_least_squares"));
        pose_correction_least_squares->setGeometry(QRect(10, 70, 271, 27));
        use_steamVR_lighthouse_poses = new QPushButton(frame_4);
        use_steamVR_lighthouse_poses->setObjectName(QStringLiteral("use_steamVR_lighthouse_poses"));
        use_steamVR_lighthouse_poses->setGeometry(QRect(10, 100, 271, 27));
        use_steamVR_lighthouse_poses->setCheckable(true);
        use_steamVR_lighthouse_poses->setChecked(false);
        compare_to_steamVR = new QPushButton(frame_4);
        compare_to_steamVR->setObjectName(QStringLiteral("compare_to_steamVR"));
        compare_to_steamVR->setGeometry(QRect(10, 130, 271, 27));
        compare_to_steamVR->setCheckable(true);
        reset_lighthouse_poses = new QPushButton(frame_4);
        reset_lighthouse_poses->setObjectName(QStringLiteral("reset_lighthouse_poses"));
        reset_lighthouse_poses->setGeometry(QRect(10, 40, 271, 27));
        switch_lighthouses = new QPushButton(frame_4);
        switch_lighthouses->setObjectName(QStringLiteral("switch_lighthouses"));
        switch_lighthouses->setGeometry(QRect(10, 10, 271, 27));
        switch_lighthouses->setCheckable(true);
        record = new QPushButton(frame_4);
        record->setObjectName(QStringLiteral("record"));
        record->setGeometry(QRect(10, 190, 271, 27));
        record->setCheckable(true);
        align_to_vive_controller = new QPushButton(frame_4);
        align_to_vive_controller->setObjectName(QStringLiteral("align_to_vive_controller"));
        align_to_vive_controller->setGeometry(QRect(10, 160, 271, 27));
        align_to_vive_controller->setCheckable(true);
        frame_9 = new QFrame(tab);
        frame_9->setObjectName(QStringLiteral("frame_9"));
        frame_9->setGeometry(QRect(290, 0, 291, 141));
        frame_9->setFrameShape(QFrame::StyledPanel);
        frame_9->setFrameShadow(QFrame::Raised);
        object_pose_estimation_least_squares = new QPushButton(frame_9);
        object_pose_estimation_least_squares->setObjectName(QStringLiteral("object_pose_estimation_least_squares"));
        object_pose_estimation_least_squares->setGeometry(QRect(10, 10, 271, 27));
        object_pose_estimation_least_squares->setCheckable(true);
        pose_estimation_relativ_sensor_distances = new QPushButton(frame_9);
        pose_estimation_relativ_sensor_distances->setObjectName(QStringLiteral("pose_estimation_relativ_sensor_distances"));
        pose_estimation_relativ_sensor_distances->setGeometry(QRect(10, 40, 271, 27));
        pose_estimation_epnp = new QPushButton(frame_9);
        pose_estimation_epnp->setObjectName(QStringLiteral("pose_estimation_epnp"));
        pose_estimation_epnp->setGeometry(QRect(10, 70, 271, 27));
        pose_estimation_epnp->setCheckable(true);
        pose_estimation_multi_lighthouse = new QPushButton(frame_9);
        pose_estimation_multi_lighthouse->setObjectName(QStringLiteral("pose_estimation_multi_lighthouse"));
        pose_estimation_multi_lighthouse->setGeometry(QRect(10, 100, 271, 27));
        pose_estimation_multi_lighthouse->setCheckable(true);
        frame_10 = new QFrame(tab);
        frame_10->setObjectName(QStringLiteral("frame_10"));
        frame_10->setGeometry(QRect(290, 140, 291, 111));
        frame_10->setFrameShape(QFrame::StyledPanel);
        frame_10->setFrameShadow(QFrame::Raised);
        triangulate = new QPushButton(frame_10);
        triangulate->setObjectName(QStringLiteral("triangulate"));
        triangulate->setGeometry(QRect(10, 10, 271, 27));
        triangulate->setCheckable(true);
        triangulate->setChecked(false);
        position_estimation_relativ_sensor_distances = new QPushButton(frame_10);
        position_estimation_relativ_sensor_distances->setObjectName(QStringLiteral("position_estimation_relativ_sensor_distances"));
        position_estimation_relativ_sensor_distances->setGeometry(QRect(10, 40, 271, 27));
        calibrate_relative_distances = new QPushButton(frame_10);
        calibrate_relative_distances->setObjectName(QStringLiteral("calibrate_relative_distances"));
        calibrate_relative_distances->setGeometry(QRect(10, 70, 271, 27));
        frame_11 = new QFrame(tab);
        frame_11->setObjectName(QStringLiteral("frame_11"));
        frame_11->setGeometry(QRect(290, 250, 291, 101));
        frame_11->setFrameShape(QFrame::StyledPanel);
        frame_11->setFrameShadow(QFrame::Raised);
        random_pose_pitch = new QCheckBox(frame_11);
        random_pose_pitch->setObjectName(QStringLiteral("random_pose_pitch"));
        random_pose_pitch->setGeometry(QRect(190, 30, 41, 22));
        random_pose_pitch->setChecked(true);
        random_pose = new QCheckBox(frame_11);
        random_pose->setObjectName(QStringLiteral("random_pose"));
        random_pose->setGeometry(QRect(10, 30, 121, 22));
        random_pose->setChecked(false);
        random_pose_yaw = new QCheckBox(frame_11);
        random_pose_yaw->setObjectName(QStringLiteral("random_pose_yaw"));
        random_pose_yaw->setGeometry(QRect(230, 30, 41, 22));
        random_pose_yaw->setChecked(true);
        simulate = new QCheckBox(frame_11);
        simulate->setObjectName(QStringLiteral("simulate"));
        simulate->setGeometry(QRect(10, 10, 97, 21));
        simulate->setChecked(true);
        random_pose_slider = new QSlider(frame_11);
        random_pose_slider->setObjectName(QStringLiteral("random_pose_slider"));
        random_pose_slider->setGeometry(QRect(140, 50, 131, 29));
        random_pose_slider->setValue(10);
        random_pose_slider->setOrientation(Qt::Horizontal);
        random_pose_y = new QCheckBox(frame_11);
        random_pose_y->setObjectName(QStringLiteral("random_pose_y"));
        random_pose_y->setGeometry(QRect(190, 10, 41, 22));
        random_pose_y->setChecked(true);
        random_pose_x = new QCheckBox(frame_11);
        random_pose_x->setObjectName(QStringLiteral("random_pose_x"));
        random_pose_x->setGeometry(QRect(150, 10, 41, 22));
        random_pose_x->setChecked(true);
        random_pose_roll = new QCheckBox(frame_11);
        random_pose_roll->setObjectName(QStringLiteral("random_pose_roll"));
        random_pose_roll->setGeometry(QRect(150, 30, 41, 22));
        random_pose_roll->setChecked(true);
        reset_pose = new QPushButton(frame_11);
        reset_pose->setObjectName(QStringLiteral("reset_pose"));
        reset_pose->setGeometry(QRect(10, 60, 121, 27));
        reset_pose->setCheckable(false);
        random_pose_z = new QCheckBox(frame_11);
        random_pose_z->setObjectName(QStringLiteral("random_pose_z"));
        random_pose_z->setGeometry(QRect(230, 10, 41, 22));
        random_pose_z->setChecked(true);
        tabWidget->addTab(tab, QString());
        tab_6 = new QWidget();
        tab_6->setObjectName(QStringLiteral("tab_6"));
        frame_5 = new QFrame(tab_6);
        frame_5->setObjectName(QStringLiteral("frame_5"));
        frame_5->setGeometry(QRect(10, 10, 281, 531));
        frame_5->setFrameShape(QFrame::StyledPanel);
        frame_5->setFrameShadow(QFrame::Raised);
        lighthouse_1 = new QLabel(frame_5);
        lighthouse_1->setObjectName(QStringLiteral("lighthouse_1"));
        lighthouse_1->setGeometry(QRect(10, 0, 101, 21));
        QFont font1;
        font1.setPointSize(10);
        font1.setBold(true);
        font1.setItalic(false);
        font1.setWeight(75);
        lighthouse_1->setFont(font1);
        x_1 = new QLabel(frame_5);
        x_1->setObjectName(QStringLiteral("x_1"));
        x_1->setGeometry(QRect(20, 30, 141, 20));
        QFont font2;
        font2.setPointSize(10);
        font2.setBold(false);
        font2.setItalic(false);
        font2.setWeight(50);
        x_1->setFont(font2);
        lighthouse_firmware_version_1 = new QLineEdit(frame_5);
        lighthouse_firmware_version_1->setObjectName(QStringLiteral("lighthouse_firmware_version_1"));
        lighthouse_firmware_version_1->setGeometry(QRect(160, 30, 111, 21));
        QFont font3;
        font3.setPointSize(10);
        font3.setItalic(true);
        lighthouse_firmware_version_1->setFont(font3);
        lighthouse_firmware_version_1->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_firmware_version_1->setReadOnly(true);
        lighthouse_protocol_version_1 = new QLineEdit(frame_5);
        lighthouse_protocol_version_1->setObjectName(QStringLiteral("lighthouse_protocol_version_1"));
        lighthouse_protocol_version_1->setGeometry(QRect(160, 50, 111, 21));
        lighthouse_protocol_version_1->setFont(font3);
        lighthouse_protocol_version_1->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_protocol_version_1->setReadOnly(true);
        x_3 = new QLabel(frame_5);
        x_3->setObjectName(QStringLiteral("x_3"));
        x_3->setGeometry(QRect(20, 50, 141, 20));
        x_3->setFont(font2);
        lighthouse_ID_1 = new QLineEdit(frame_5);
        lighthouse_ID_1->setObjectName(QStringLiteral("lighthouse_ID_1"));
        lighthouse_ID_1->setGeometry(QRect(160, 70, 111, 21));
        lighthouse_ID_1->setFont(font3);
        lighthouse_ID_1->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_ID_1->setReadOnly(true);
        x_4 = new QLabel(frame_5);
        x_4->setObjectName(QStringLiteral("x_4"));
        x_4->setGeometry(QRect(20, 70, 141, 20));
        x_4->setFont(font2);
        lighthouse_hardware_version_1 = new QLineEdit(frame_5);
        lighthouse_hardware_version_1->setObjectName(QStringLiteral("lighthouse_hardware_version_1"));
        lighthouse_hardware_version_1->setGeometry(QRect(160, 90, 111, 21));
        lighthouse_hardware_version_1->setFont(font3);
        lighthouse_hardware_version_1->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_hardware_version_1->setReadOnly(true);
        x_5 = new QLabel(frame_5);
        x_5->setObjectName(QStringLiteral("x_5"));
        x_5->setGeometry(QRect(20, 90, 141, 20));
        x_5->setFont(font2);
        lighthouse_acc_x_1 = new QLineEdit(frame_5);
        lighthouse_acc_x_1->setObjectName(QStringLiteral("lighthouse_acc_x_1"));
        lighthouse_acc_x_1->setGeometry(QRect(160, 180, 111, 21));
        lighthouse_acc_x_1->setFont(font3);
        lighthouse_acc_x_1->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_acc_x_1->setReadOnly(true);
        x_6 = new QLabel(frame_5);
        x_6->setObjectName(QStringLiteral("x_6"));
        x_6->setGeometry(QRect(20, 180, 141, 20));
        x_6->setFont(font2);
        x_7 = new QLabel(frame_5);
        x_7->setObjectName(QStringLiteral("x_7"));
        x_7->setGeometry(QRect(20, 200, 141, 20));
        x_7->setFont(font2);
        lighthouse_acc_y_1 = new QLineEdit(frame_5);
        lighthouse_acc_y_1->setObjectName(QStringLiteral("lighthouse_acc_y_1"));
        lighthouse_acc_y_1->setGeometry(QRect(160, 200, 111, 21));
        lighthouse_acc_y_1->setFont(font3);
        lighthouse_acc_y_1->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_acc_y_1->setReadOnly(true);
        x_8 = new QLabel(frame_5);
        x_8->setObjectName(QStringLiteral("x_8"));
        x_8->setGeometry(QRect(20, 220, 141, 20));
        x_8->setFont(font2);
        lighthouse_acc_z_1 = new QLineEdit(frame_5);
        lighthouse_acc_z_1->setObjectName(QStringLiteral("lighthouse_acc_z_1"));
        lighthouse_acc_z_1->setGeometry(QRect(160, 220, 111, 21));
        lighthouse_acc_z_1->setFont(font3);
        lighthouse_acc_z_1->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_acc_z_1->setReadOnly(true);
        x_9 = new QLabel(frame_5);
        x_9->setObjectName(QStringLiteral("x_9"));
        x_9->setGeometry(QRect(20, 110, 141, 20));
        x_9->setFont(font2);
        lighthouse_selected_mode_1 = new QLineEdit(frame_5);
        lighthouse_selected_mode_1->setObjectName(QStringLiteral("lighthouse_selected_mode_1"));
        lighthouse_selected_mode_1->setGeometry(QRect(160, 110, 111, 21));
        lighthouse_selected_mode_1->setFont(font3);
        lighthouse_selected_mode_1->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_selected_mode_1->setReadOnly(true);
        x_37 = new QLabel(frame_5);
        x_37->setObjectName(QStringLiteral("x_37"));
        x_37->setGeometry(QRect(20, 130, 141, 20));
        x_37->setFont(font2);
        lighthouse_fault_detect_flags_1 = new QLineEdit(frame_5);
        lighthouse_fault_detect_flags_1->setObjectName(QStringLiteral("lighthouse_fault_detect_flags_1"));
        lighthouse_fault_detect_flags_1->setGeometry(QRect(160, 130, 111, 21));
        lighthouse_fault_detect_flags_1->setFont(font3);
        lighthouse_fault_detect_flags_1->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_fault_detect_flags_1->setReadOnly(true);
        x_38 = new QLabel(frame_5);
        x_38->setObjectName(QStringLiteral("x_38"));
        x_38->setGeometry(QRect(20, 150, 141, 20));
        x_38->setFont(font2);
        x_39 = new QLabel(frame_5);
        x_39->setObjectName(QStringLiteral("x_39"));
        x_39->setGeometry(QRect(20, 270, 141, 20));
        x_39->setFont(font2);
        lighthouse_phase0_1 = new QLineEdit(frame_5);
        lighthouse_phase0_1->setObjectName(QStringLiteral("lighthouse_phase0_1"));
        lighthouse_phase0_1->setGeometry(QRect(160, 250, 111, 21));
        lighthouse_phase0_1->setFont(font3);
        lighthouse_phase0_1->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_phase0_1->setReadOnly(true);
        x_40 = new QLabel(frame_5);
        x_40->setObjectName(QStringLiteral("x_40"));
        x_40->setGeometry(QRect(20, 250, 141, 20));
        x_40->setFont(font2);
        lighthouse_phase1_1 = new QLineEdit(frame_5);
        lighthouse_phase1_1->setObjectName(QStringLiteral("lighthouse_phase1_1"));
        lighthouse_phase1_1->setGeometry(QRect(160, 270, 111, 21));
        lighthouse_phase1_1->setFont(font3);
        lighthouse_phase1_1->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_phase1_1->setReadOnly(true);
        x_41 = new QLabel(frame_5);
        x_41->setObjectName(QStringLiteral("x_41"));
        x_41->setGeometry(QRect(20, 290, 141, 20));
        x_41->setFont(font2);
        lighthouse_tilt1_1 = new QLineEdit(frame_5);
        lighthouse_tilt1_1->setObjectName(QStringLiteral("lighthouse_tilt1_1"));
        lighthouse_tilt1_1->setGeometry(QRect(160, 310, 111, 21));
        lighthouse_tilt1_1->setFont(font3);
        lighthouse_tilt1_1->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_tilt1_1->setReadOnly(true);
        lighthouse_tilt0_1 = new QLineEdit(frame_5);
        lighthouse_tilt0_1->setObjectName(QStringLiteral("lighthouse_tilt0_1"));
        lighthouse_tilt0_1->setGeometry(QRect(160, 290, 111, 21));
        lighthouse_tilt0_1->setFont(font3);
        lighthouse_tilt0_1->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_tilt0_1->setReadOnly(true);
        x_42 = new QLabel(frame_5);
        x_42->setObjectName(QStringLiteral("x_42"));
        x_42->setGeometry(QRect(20, 310, 141, 20));
        x_42->setFont(font2);
        x_43 = new QLabel(frame_5);
        x_43->setObjectName(QStringLiteral("x_43"));
        x_43->setGeometry(QRect(20, 430, 141, 20));
        x_43->setFont(font2);
        lighthouse_gibmag0_1 = new QLineEdit(frame_5);
        lighthouse_gibmag0_1->setObjectName(QStringLiteral("lighthouse_gibmag0_1"));
        lighthouse_gibmag0_1->setGeometry(QRect(160, 410, 111, 21));
        lighthouse_gibmag0_1->setFont(font3);
        lighthouse_gibmag0_1->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_gibmag0_1->setReadOnly(true);
        x_44 = new QLabel(frame_5);
        x_44->setObjectName(QStringLiteral("x_44"));
        x_44->setGeometry(QRect(20, 370, 141, 20));
        x_44->setFont(font2);
        x_45 = new QLabel(frame_5);
        x_45->setObjectName(QStringLiteral("x_45"));
        x_45->setGeometry(QRect(20, 410, 141, 20));
        x_45->setFont(font2);
        lighthouse_gibmag1_1 = new QLineEdit(frame_5);
        lighthouse_gibmag1_1->setObjectName(QStringLiteral("lighthouse_gibmag1_1"));
        lighthouse_gibmag1_1->setGeometry(QRect(160, 430, 111, 21));
        lighthouse_gibmag1_1->setFont(font3);
        lighthouse_gibmag1_1->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_gibmag1_1->setReadOnly(true);
        lighthouse_gibphase1_1 = new QLineEdit(frame_5);
        lighthouse_gibphase1_1->setObjectName(QStringLiteral("lighthouse_gibphase1_1"));
        lighthouse_gibphase1_1->setGeometry(QRect(160, 390, 111, 21));
        lighthouse_gibphase1_1->setFont(font3);
        lighthouse_gibphase1_1->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_gibphase1_1->setReadOnly(true);
        lighthouse_gibphase0_1 = new QLineEdit(frame_5);
        lighthouse_gibphase0_1->setObjectName(QStringLiteral("lighthouse_gibphase0_1"));
        lighthouse_gibphase0_1->setGeometry(QRect(160, 370, 111, 21));
        lighthouse_gibphase0_1->setFont(font3);
        lighthouse_gibphase0_1->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_gibphase0_1->setReadOnly(true);
        x_46 = new QLabel(frame_5);
        x_46->setObjectName(QStringLiteral("x_46"));
        x_46->setGeometry(QRect(20, 390, 141, 20));
        x_46->setFont(font2);
        lighthouse_desync_counter_1 = new QLineEdit(frame_5);
        lighthouse_desync_counter_1->setObjectName(QStringLiteral("lighthouse_desync_counter_1"));
        lighthouse_desync_counter_1->setGeometry(QRect(160, 150, 111, 21));
        lighthouse_desync_counter_1->setFont(font3);
        lighthouse_desync_counter_1->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_desync_counter_1->setReadOnly(true);
        lighthouse_curve1_1 = new QLineEdit(frame_5);
        lighthouse_curve1_1->setObjectName(QStringLiteral("lighthouse_curve1_1"));
        lighthouse_curve1_1->setGeometry(QRect(160, 350, 111, 21));
        lighthouse_curve1_1->setFont(font3);
        lighthouse_curve1_1->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_curve1_1->setReadOnly(true);
        lighthouse_curve0_1 = new QLineEdit(frame_5);
        lighthouse_curve0_1->setObjectName(QStringLiteral("lighthouse_curve0_1"));
        lighthouse_curve0_1->setGeometry(QRect(160, 330, 111, 21));
        lighthouse_curve0_1->setFont(font3);
        lighthouse_curve0_1->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_curve0_1->setReadOnly(true);
        x_57 = new QLabel(frame_5);
        x_57->setObjectName(QStringLiteral("x_57"));
        x_57->setGeometry(QRect(20, 330, 141, 20));
        x_57->setFont(font2);
        x_58 = new QLabel(frame_5);
        x_58->setObjectName(QStringLiteral("x_58"));
        x_58->setGeometry(QRect(20, 350, 141, 20));
        x_58->setFont(font2);
        lighthouse_use_phase_1 = new QPushButton(frame_5);
        lighthouse_use_phase_1->setObjectName(QStringLiteral("lighthouse_use_phase_1"));
        lighthouse_use_phase_1->setGeometry(QRect(20, 460, 61, 27));
        lighthouse_use_phase_1->setCheckable(true);
        lighthouse_use_phase_1->setChecked(true);
        lighthouse_use_tilt_1 = new QPushButton(frame_5);
        lighthouse_use_tilt_1->setObjectName(QStringLiteral("lighthouse_use_tilt_1"));
        lighthouse_use_tilt_1->setEnabled(true);
        lighthouse_use_tilt_1->setGeometry(QRect(80, 460, 61, 27));
        lighthouse_use_tilt_1->setCheckable(true);
        lighthouse_use_tilt_1->setChecked(true);
        lighthouse_use_curve_1 = new QPushButton(frame_5);
        lighthouse_use_curve_1->setObjectName(QStringLiteral("lighthouse_use_curve_1"));
        lighthouse_use_curve_1->setGeometry(QRect(140, 460, 61, 27));
        lighthouse_use_curve_1->setCheckable(true);
        lighthouse_use_curve_1->setChecked(true);
        lighthouse_use_gibbous_1 = new QPushButton(frame_5);
        lighthouse_use_gibbous_1->setObjectName(QStringLiteral("lighthouse_use_gibbous_1"));
        lighthouse_use_gibbous_1->setGeometry(QRect(200, 460, 61, 27));
        lighthouse_use_gibbous_1->setCheckable(true);
        lighthouse_use_gibbous_1->setChecked(true);
        frame_7 = new QFrame(tab_6);
        frame_7->setObjectName(QStringLiteral("frame_7"));
        frame_7->setGeometry(QRect(300, 10, 281, 531));
        frame_7->setFrameShape(QFrame::StyledPanel);
        frame_7->setFrameShadow(QFrame::Raised);
        lighthouse_2 = new QLabel(frame_7);
        lighthouse_2->setObjectName(QStringLiteral("lighthouse_2"));
        lighthouse_2->setGeometry(QRect(10, 0, 101, 21));
        lighthouse_2->setFont(font1);
        x_2 = new QLabel(frame_7);
        x_2->setObjectName(QStringLiteral("x_2"));
        x_2->setGeometry(QRect(20, 30, 141, 20));
        x_2->setFont(font2);
        lighthouse_firmware_version_2 = new QLineEdit(frame_7);
        lighthouse_firmware_version_2->setObjectName(QStringLiteral("lighthouse_firmware_version_2"));
        lighthouse_firmware_version_2->setGeometry(QRect(160, 30, 111, 21));
        lighthouse_firmware_version_2->setFont(font3);
        lighthouse_firmware_version_2->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_firmware_version_2->setReadOnly(true);
        lighthouse_protocol_version_2 = new QLineEdit(frame_7);
        lighthouse_protocol_version_2->setObjectName(QStringLiteral("lighthouse_protocol_version_2"));
        lighthouse_protocol_version_2->setGeometry(QRect(160, 50, 111, 21));
        lighthouse_protocol_version_2->setFont(font3);
        lighthouse_protocol_version_2->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_protocol_version_2->setReadOnly(true);
        x_10 = new QLabel(frame_7);
        x_10->setObjectName(QStringLiteral("x_10"));
        x_10->setGeometry(QRect(20, 50, 141, 20));
        x_10->setFont(font2);
        lighthouse_ID_2 = new QLineEdit(frame_7);
        lighthouse_ID_2->setObjectName(QStringLiteral("lighthouse_ID_2"));
        lighthouse_ID_2->setGeometry(QRect(160, 70, 111, 21));
        lighthouse_ID_2->setFont(font3);
        lighthouse_ID_2->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_ID_2->setReadOnly(true);
        x_11 = new QLabel(frame_7);
        x_11->setObjectName(QStringLiteral("x_11"));
        x_11->setGeometry(QRect(20, 70, 141, 20));
        x_11->setFont(font2);
        lighthouse_hardware_version_2 = new QLineEdit(frame_7);
        lighthouse_hardware_version_2->setObjectName(QStringLiteral("lighthouse_hardware_version_2"));
        lighthouse_hardware_version_2->setGeometry(QRect(160, 90, 111, 21));
        lighthouse_hardware_version_2->setFont(font3);
        lighthouse_hardware_version_2->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_hardware_version_2->setReadOnly(true);
        x_12 = new QLabel(frame_7);
        x_12->setObjectName(QStringLiteral("x_12"));
        x_12->setGeometry(QRect(20, 90, 141, 20));
        x_12->setFont(font2);
        lighthouse_acc_x_2 = new QLineEdit(frame_7);
        lighthouse_acc_x_2->setObjectName(QStringLiteral("lighthouse_acc_x_2"));
        lighthouse_acc_x_2->setGeometry(QRect(160, 180, 111, 21));
        lighthouse_acc_x_2->setFont(font3);
        lighthouse_acc_x_2->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_acc_x_2->setReadOnly(true);
        x_13 = new QLabel(frame_7);
        x_13->setObjectName(QStringLiteral("x_13"));
        x_13->setGeometry(QRect(20, 180, 141, 20));
        x_13->setFont(font2);
        x_14 = new QLabel(frame_7);
        x_14->setObjectName(QStringLiteral("x_14"));
        x_14->setGeometry(QRect(20, 200, 141, 20));
        x_14->setFont(font2);
        lighthouse_acc_y_2 = new QLineEdit(frame_7);
        lighthouse_acc_y_2->setObjectName(QStringLiteral("lighthouse_acc_y_2"));
        lighthouse_acc_y_2->setGeometry(QRect(160, 200, 111, 21));
        lighthouse_acc_y_2->setFont(font3);
        lighthouse_acc_y_2->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_acc_y_2->setReadOnly(true);
        x_15 = new QLabel(frame_7);
        x_15->setObjectName(QStringLiteral("x_15"));
        x_15->setGeometry(QRect(20, 220, 141, 20));
        x_15->setFont(font2);
        lighthouse_acc_z_2 = new QLineEdit(frame_7);
        lighthouse_acc_z_2->setObjectName(QStringLiteral("lighthouse_acc_z_2"));
        lighthouse_acc_z_2->setGeometry(QRect(160, 220, 111, 21));
        lighthouse_acc_z_2->setFont(font3);
        lighthouse_acc_z_2->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_acc_z_2->setReadOnly(true);
        x_16 = new QLabel(frame_7);
        x_16->setObjectName(QStringLiteral("x_16"));
        x_16->setGeometry(QRect(20, 110, 141, 20));
        x_16->setFont(font2);
        lighthouse_selected_mode_2 = new QLineEdit(frame_7);
        lighthouse_selected_mode_2->setObjectName(QStringLiteral("lighthouse_selected_mode_2"));
        lighthouse_selected_mode_2->setGeometry(QRect(160, 110, 111, 21));
        lighthouse_selected_mode_2->setFont(font3);
        lighthouse_selected_mode_2->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_selected_mode_2->setReadOnly(true);
        lighthouse_fault_detect_flags_2 = new QLineEdit(frame_7);
        lighthouse_fault_detect_flags_2->setObjectName(QStringLiteral("lighthouse_fault_detect_flags_2"));
        lighthouse_fault_detect_flags_2->setGeometry(QRect(160, 130, 111, 21));
        lighthouse_fault_detect_flags_2->setFont(font3);
        lighthouse_fault_detect_flags_2->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_fault_detect_flags_2->setReadOnly(true);
        x_47 = new QLabel(frame_7);
        x_47->setObjectName(QStringLiteral("x_47"));
        x_47->setGeometry(QRect(20, 150, 141, 20));
        x_47->setFont(font2);
        x_48 = new QLabel(frame_7);
        x_48->setObjectName(QStringLiteral("x_48"));
        x_48->setGeometry(QRect(20, 130, 141, 20));
        x_48->setFont(font2);
        x_49 = new QLabel(frame_7);
        x_49->setObjectName(QStringLiteral("x_49"));
        x_49->setGeometry(QRect(20, 310, 141, 20));
        x_49->setFont(font2);
        x_50 = new QLabel(frame_7);
        x_50->setObjectName(QStringLiteral("x_50"));
        x_50->setGeometry(QRect(20, 250, 141, 20));
        x_50->setFont(font2);
        x_51 = new QLabel(frame_7);
        x_51->setObjectName(QStringLiteral("x_51"));
        x_51->setGeometry(QRect(20, 290, 141, 20));
        x_51->setFont(font2);
        x_52 = new QLabel(frame_7);
        x_52->setObjectName(QStringLiteral("x_52"));
        x_52->setGeometry(QRect(20, 430, 141, 20));
        x_52->setFont(font2);
        x_53 = new QLabel(frame_7);
        x_53->setObjectName(QStringLiteral("x_53"));
        x_53->setGeometry(QRect(20, 270, 141, 20));
        x_53->setFont(font2);
        x_54 = new QLabel(frame_7);
        x_54->setObjectName(QStringLiteral("x_54"));
        x_54->setGeometry(QRect(20, 370, 141, 20));
        x_54->setFont(font2);
        x_55 = new QLabel(frame_7);
        x_55->setObjectName(QStringLiteral("x_55"));
        x_55->setGeometry(QRect(20, 390, 141, 20));
        x_55->setFont(font2);
        x_56 = new QLabel(frame_7);
        x_56->setObjectName(QStringLiteral("x_56"));
        x_56->setGeometry(QRect(20, 410, 141, 20));
        x_56->setFont(font2);
        lighthouse_tilt0_2 = new QLineEdit(frame_7);
        lighthouse_tilt0_2->setObjectName(QStringLiteral("lighthouse_tilt0_2"));
        lighthouse_tilt0_2->setGeometry(QRect(160, 290, 111, 21));
        lighthouse_tilt0_2->setFont(font3);
        lighthouse_tilt0_2->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_tilt0_2->setReadOnly(true);
        lighthouse_gibphase1_2 = new QLineEdit(frame_7);
        lighthouse_gibphase1_2->setObjectName(QStringLiteral("lighthouse_gibphase1_2"));
        lighthouse_gibphase1_2->setGeometry(QRect(160, 390, 111, 21));
        lighthouse_gibphase1_2->setFont(font3);
        lighthouse_gibphase1_2->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_gibphase1_2->setReadOnly(true);
        lighthouse_gibmag1_2 = new QLineEdit(frame_7);
        lighthouse_gibmag1_2->setObjectName(QStringLiteral("lighthouse_gibmag1_2"));
        lighthouse_gibmag1_2->setGeometry(QRect(160, 430, 111, 21));
        lighthouse_gibmag1_2->setFont(font3);
        lighthouse_gibmag1_2->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_gibmag1_2->setReadOnly(true);
        lighthouse_tilt1_2 = new QLineEdit(frame_7);
        lighthouse_tilt1_2->setObjectName(QStringLiteral("lighthouse_tilt1_2"));
        lighthouse_tilt1_2->setGeometry(QRect(160, 310, 111, 21));
        lighthouse_tilt1_2->setFont(font3);
        lighthouse_tilt1_2->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_tilt1_2->setReadOnly(true);
        lighthouse_phase1_2 = new QLineEdit(frame_7);
        lighthouse_phase1_2->setObjectName(QStringLiteral("lighthouse_phase1_2"));
        lighthouse_phase1_2->setGeometry(QRect(160, 270, 111, 21));
        lighthouse_phase1_2->setFont(font3);
        lighthouse_phase1_2->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_phase1_2->setReadOnly(true);
        lighthouse_gibphase0_2 = new QLineEdit(frame_7);
        lighthouse_gibphase0_2->setObjectName(QStringLiteral("lighthouse_gibphase0_2"));
        lighthouse_gibphase0_2->setGeometry(QRect(160, 370, 111, 21));
        lighthouse_gibphase0_2->setFont(font3);
        lighthouse_gibphase0_2->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_gibphase0_2->setReadOnly(true);
        lighthouse_gibmag0_2 = new QLineEdit(frame_7);
        lighthouse_gibmag0_2->setObjectName(QStringLiteral("lighthouse_gibmag0_2"));
        lighthouse_gibmag0_2->setGeometry(QRect(160, 410, 111, 21));
        lighthouse_gibmag0_2->setFont(font3);
        lighthouse_gibmag0_2->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_gibmag0_2->setReadOnly(true);
        lighthouse_phase0_2 = new QLineEdit(frame_7);
        lighthouse_phase0_2->setObjectName(QStringLiteral("lighthouse_phase0_2"));
        lighthouse_phase0_2->setGeometry(QRect(160, 250, 111, 21));
        lighthouse_phase0_2->setFont(font3);
        lighthouse_phase0_2->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_phase0_2->setReadOnly(true);
        lighthouse_desync_counter_2 = new QLineEdit(frame_7);
        lighthouse_desync_counter_2->setObjectName(QStringLiteral("lighthouse_desync_counter_2"));
        lighthouse_desync_counter_2->setGeometry(QRect(160, 150, 111, 21));
        lighthouse_desync_counter_2->setFont(font3);
        lighthouse_desync_counter_2->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_desync_counter_2->setReadOnly(true);
        x_59 = new QLabel(frame_7);
        x_59->setObjectName(QStringLiteral("x_59"));
        x_59->setGeometry(QRect(20, 330, 141, 20));
        x_59->setFont(font2);
        lighthouse_curve0_2 = new QLineEdit(frame_7);
        lighthouse_curve0_2->setObjectName(QStringLiteral("lighthouse_curve0_2"));
        lighthouse_curve0_2->setGeometry(QRect(160, 330, 111, 21));
        lighthouse_curve0_2->setFont(font3);
        lighthouse_curve0_2->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_curve0_2->setReadOnly(true);
        x_60 = new QLabel(frame_7);
        x_60->setObjectName(QStringLiteral("x_60"));
        x_60->setGeometry(QRect(20, 350, 141, 20));
        x_60->setFont(font2);
        lighthouse_curve1_2 = new QLineEdit(frame_7);
        lighthouse_curve1_2->setObjectName(QStringLiteral("lighthouse_curve1_2"));
        lighthouse_curve1_2->setGeometry(QRect(160, 350, 111, 21));
        lighthouse_curve1_2->setFont(font3);
        lighthouse_curve1_2->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_curve1_2->setReadOnly(true);
        lighthouse_use_phase_2 = new QPushButton(frame_7);
        lighthouse_use_phase_2->setObjectName(QStringLiteral("lighthouse_use_phase_2"));
        lighthouse_use_phase_2->setGeometry(QRect(20, 460, 61, 27));
        lighthouse_use_phase_2->setCheckable(true);
        lighthouse_use_phase_2->setChecked(true);
        lighthouse_use_tilt_2 = new QPushButton(frame_7);
        lighthouse_use_tilt_2->setObjectName(QStringLiteral("lighthouse_use_tilt_2"));
        lighthouse_use_tilt_2->setEnabled(true);
        lighthouse_use_tilt_2->setGeometry(QRect(80, 460, 61, 27));
        lighthouse_use_tilt_2->setCheckable(true);
        lighthouse_use_tilt_2->setChecked(true);
        lighthouse_use_curve_2 = new QPushButton(frame_7);
        lighthouse_use_curve_2->setObjectName(QStringLiteral("lighthouse_use_curve_2"));
        lighthouse_use_curve_2->setGeometry(QRect(140, 460, 61, 27));
        lighthouse_use_curve_2->setCheckable(true);
        lighthouse_use_curve_2->setChecked(true);
        lighthouse_use_gibbous_2 = new QPushButton(frame_7);
        lighthouse_use_gibbous_2->setObjectName(QStringLiteral("lighthouse_use_gibbous_2"));
        lighthouse_use_gibbous_2->setGeometry(QRect(200, 460, 61, 27));
        lighthouse_use_gibbous_2->setCheckable(true);
        lighthouse_use_gibbous_2->setChecked(true);
        switch_lighthouse_calibration_values = new QPushButton(tab_6);
        switch_lighthouse_calibration_values->setObjectName(QStringLiteral("switch_lighthouse_calibration_values"));
        switch_lighthouse_calibration_values->setGeometry(QRect(160, 550, 271, 27));
        switch_lighthouse_calibration_values->setCheckable(true);
        tabWidget->addTab(tab_6, QString());
        tab_2 = new QWidget();
        tab_2->setObjectName(QStringLiteral("tab_2"));
        horizontal_angle_lighthouse_1 = new QCustomPlot(tab_2);
        horizontal_angle_lighthouse_1->setObjectName(QStringLiteral("horizontal_angle_lighthouse_1"));
        horizontal_angle_lighthouse_1->setGeometry(QRect(0, 30, 291, 261));
        label = new QLabel(horizontal_angle_lighthouse_1);
        label->setObjectName(QStringLiteral("label"));
        label->setGeometry(QRect(40, 0, 231, 20));
        sensor_selector = new QSpinBox(tab_2);
        sensor_selector->setObjectName(QStringLiteral("sensor_selector"));
        sensor_selector->setGeometry(QRect(77, 10, 71, 21));
        sensor_selector->setMaximum(31);
        sensor_selector_label = new QLabel(tab_2);
        sensor_selector_label->setObjectName(QStringLiteral("sensor_selector_label"));
        sensor_selector_label->setGeometry(QRect(10, 10, 51, 20));
        vertical_angle_lighthouse_1 = new QCustomPlot(tab_2);
        vertical_angle_lighthouse_1->setObjectName(QStringLiteral("vertical_angle_lighthouse_1"));
        vertical_angle_lighthouse_1->setGeometry(QRect(290, 30, 291, 261));
        label_2 = new QLabel(vertical_angle_lighthouse_1);
        label_2->setObjectName(QStringLiteral("label_2"));
        label_2->setGeometry(QRect(40, 0, 221, 20));
        vertical_angle_lighthouse_2 = new QCustomPlot(tab_2);
        vertical_angle_lighthouse_2->setObjectName(QStringLiteral("vertical_angle_lighthouse_2"));
        vertical_angle_lighthouse_2->setGeometry(QRect(290, 290, 291, 261));
        label_3 = new QLabel(vertical_angle_lighthouse_2);
        label_3->setObjectName(QStringLiteral("label_3"));
        label_3->setGeometry(QRect(40, 0, 221, 20));
        horizontal_angle_lighthouse_2 = new QCustomPlot(tab_2);
        horizontal_angle_lighthouse_2->setObjectName(QStringLiteral("horizontal_angle_lighthouse_2"));
        horizontal_angle_lighthouse_2->setGeometry(QRect(0, 290, 291, 261));
        label_4 = new QLabel(horizontal_angle_lighthouse_2);
        label_4->setObjectName(QStringLiteral("label_4"));
        label_4->setGeometry(QRect(40, 0, 231, 20));
        tabWidget->addTab(tab_2, QString());
        tab_3 = new QWidget();
        tab_3->setObjectName(QStringLiteral("tab_3"));
        update_frequencies_horizontal_lighthouse_1 = new QCustomPlot(tab_3);
        update_frequencies_horizontal_lighthouse_1->setObjectName(QStringLiteral("update_frequencies_horizontal_lighthouse_1"));
        update_frequencies_horizontal_lighthouse_1->setGeometry(QRect(0, 10, 291, 271));
        label_5 = new QLabel(update_frequencies_horizontal_lighthouse_1);
        label_5->setObjectName(QStringLiteral("label_5"));
        label_5->setGeometry(QRect(10, 0, 241, 20));
        update_frequencies_vertical_lighthouse_1 = new QCustomPlot(tab_3);
        update_frequencies_vertical_lighthouse_1->setObjectName(QStringLiteral("update_frequencies_vertical_lighthouse_1"));
        update_frequencies_vertical_lighthouse_1->setGeometry(QRect(290, 10, 291, 271));
        label_7 = new QLabel(update_frequencies_vertical_lighthouse_1);
        label_7->setObjectName(QStringLiteral("label_7"));
        label_7->setGeometry(QRect(10, 0, 241, 20));
        update_frequencies_horizontal_lighthouse_2 = new QCustomPlot(tab_3);
        update_frequencies_horizontal_lighthouse_2->setObjectName(QStringLiteral("update_frequencies_horizontal_lighthouse_2"));
        update_frequencies_horizontal_lighthouse_2->setGeometry(QRect(0, 280, 291, 271));
        label_6 = new QLabel(update_frequencies_horizontal_lighthouse_2);
        label_6->setObjectName(QStringLiteral("label_6"));
        label_6->setGeometry(QRect(10, 0, 241, 20));
        update_frequencies_vertical_lighthouse_2 = new QCustomPlot(tab_3);
        update_frequencies_vertical_lighthouse_2->setObjectName(QStringLiteral("update_frequencies_vertical_lighthouse_2"));
        update_frequencies_vertical_lighthouse_2->setGeometry(QRect(290, 280, 291, 271));
        label_8 = new QLabel(update_frequencies_vertical_lighthouse_2);
        label_8->setObjectName(QStringLiteral("label_8"));
        label_8->setGeometry(QRect(10, 0, 241, 20));
        tabWidget->addTab(tab_3, QString());
        tab_4 = new QWidget();
        tab_4->setObjectName(QStringLiteral("tab_4"));
        tracked_object_browser = new QTreeView(tab_4);
        tracked_object_browser->setObjectName(QStringLiteral("tracked_object_browser"));
        tracked_object_browser->setGeometry(QRect(10, 0, 571, 551));
        tabWidget->addTab(tab_4, QString());
        tab_5 = new QWidget();
        tab_5->setObjectName(QStringLiteral("tab_5"));
        frame_6 = new QFrame(tab_5);
        frame_6->setObjectName(QStringLiteral("frame_6"));
        frame_6->setGeometry(QRect(20, 20, 561, 251));
        frame_6->setFrameShape(QFrame::StyledPanel);
        frame_6->setFrameShadow(QFrame::Raised);
        lighthouse_3 = new QLabel(frame_6);
        lighthouse_3->setObjectName(QStringLiteral("lighthouse_3"));
        lighthouse_3->setGeometry(QRect(10, 0, 101, 21));
        lighthouse_3->setFont(font1);
        x_17 = new QLabel(frame_6);
        x_17->setObjectName(QStringLiteral("x_17"));
        x_17->setGeometry(QRect(20, 80, 141, 20));
        x_17->setFont(font2);
        lighthouse_phase_horizontal_1 = new QLineEdit(frame_6);
        lighthouse_phase_horizontal_1->setObjectName(QStringLiteral("lighthouse_phase_horizontal_1"));
        lighthouse_phase_horizontal_1->setGeometry(QRect(160, 40, 111, 21));
        lighthouse_phase_horizontal_1->setFont(font3);
        lighthouse_phase_horizontal_1->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_phase_horizontal_1->setReadOnly(true);
        lighthouse_phase_vertical_1 = new QLineEdit(frame_6);
        lighthouse_phase_vertical_1->setObjectName(QStringLiteral("lighthouse_phase_vertical_1"));
        lighthouse_phase_vertical_1->setGeometry(QRect(160, 60, 111, 21));
        lighthouse_phase_vertical_1->setFont(font3);
        lighthouse_phase_vertical_1->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_phase_vertical_1->setReadOnly(true);
        x_18 = new QLabel(frame_6);
        x_18->setObjectName(QStringLiteral("x_18"));
        x_18->setGeometry(QRect(20, 120, 141, 20));
        x_18->setFont(font2);
        lighthouse_tilt_horizontal_1 = new QLineEdit(frame_6);
        lighthouse_tilt_horizontal_1->setObjectName(QStringLiteral("lighthouse_tilt_horizontal_1"));
        lighthouse_tilt_horizontal_1->setGeometry(QRect(160, 80, 111, 21));
        lighthouse_tilt_horizontal_1->setFont(font3);
        lighthouse_tilt_horizontal_1->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_tilt_horizontal_1->setReadOnly(true);
        x_19 = new QLabel(frame_6);
        x_19->setObjectName(QStringLiteral("x_19"));
        x_19->setGeometry(QRect(20, 40, 141, 20));
        x_19->setFont(font2);
        lighthouse_tilt_vertical_1 = new QLineEdit(frame_6);
        lighthouse_tilt_vertical_1->setObjectName(QStringLiteral("lighthouse_tilt_vertical_1"));
        lighthouse_tilt_vertical_1->setGeometry(QRect(160, 100, 111, 21));
        lighthouse_tilt_vertical_1->setFont(font3);
        lighthouse_tilt_vertical_1->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_tilt_vertical_1->setReadOnly(true);
        x_20 = new QLabel(frame_6);
        x_20->setObjectName(QStringLiteral("x_20"));
        x_20->setGeometry(QRect(20, 60, 141, 20));
        x_20->setFont(font2);
        lighthouse_curve_horizontal_1 = new QLineEdit(frame_6);
        lighthouse_curve_horizontal_1->setObjectName(QStringLiteral("lighthouse_curve_horizontal_1"));
        lighthouse_curve_horizontal_1->setGeometry(QRect(160, 120, 111, 21));
        lighthouse_curve_horizontal_1->setFont(font3);
        lighthouse_curve_horizontal_1->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_curve_horizontal_1->setReadOnly(true);
        x_21 = new QLabel(frame_6);
        x_21->setObjectName(QStringLiteral("x_21"));
        x_21->setGeometry(QRect(20, 100, 141, 20));
        x_21->setFont(font2);
        x_22 = new QLabel(frame_6);
        x_22->setObjectName(QStringLiteral("x_22"));
        x_22->setGeometry(QRect(20, 140, 141, 20));
        x_22->setFont(font2);
        lighthouse_curve_vertical_1 = new QLineEdit(frame_6);
        lighthouse_curve_vertical_1->setObjectName(QStringLiteral("lighthouse_curve_vertical_1"));
        lighthouse_curve_vertical_1->setGeometry(QRect(160, 140, 111, 21));
        lighthouse_curve_vertical_1->setFont(font3);
        lighthouse_curve_vertical_1->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_curve_vertical_1->setReadOnly(true);
        x_23 = new QLabel(frame_6);
        x_23->setObjectName(QStringLiteral("x_23"));
        x_23->setGeometry(QRect(20, 160, 141, 20));
        x_23->setFont(font2);
        lighthouse_gibphase_horizontal_1 = new QLineEdit(frame_6);
        lighthouse_gibphase_horizontal_1->setObjectName(QStringLiteral("lighthouse_gibphase_horizontal_1"));
        lighthouse_gibphase_horizontal_1->setGeometry(QRect(160, 160, 111, 21));
        lighthouse_gibphase_horizontal_1->setFont(font3);
        lighthouse_gibphase_horizontal_1->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_gibphase_horizontal_1->setReadOnly(true);
        lighthouse_gibphase_vertical_1 = new QLineEdit(frame_6);
        lighthouse_gibphase_vertical_1->setObjectName(QStringLiteral("lighthouse_gibphase_vertical_1"));
        lighthouse_gibphase_vertical_1->setGeometry(QRect(160, 180, 111, 21));
        lighthouse_gibphase_vertical_1->setFont(font3);
        lighthouse_gibphase_vertical_1->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_gibphase_vertical_1->setReadOnly(true);
        x_25 = new QLabel(frame_6);
        x_25->setObjectName(QStringLiteral("x_25"));
        x_25->setGeometry(QRect(20, 180, 141, 20));
        x_25->setFont(font2);
        lighthouse_gibmag_vertical_1 = new QLineEdit(frame_6);
        lighthouse_gibmag_vertical_1->setObjectName(QStringLiteral("lighthouse_gibmag_vertical_1"));
        lighthouse_gibmag_vertical_1->setGeometry(QRect(160, 220, 111, 21));
        lighthouse_gibmag_vertical_1->setFont(font3);
        lighthouse_gibmag_vertical_1->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_gibmag_vertical_1->setReadOnly(true);
        lighthouse_gibmag_horizontal_1 = new QLineEdit(frame_6);
        lighthouse_gibmag_horizontal_1->setObjectName(QStringLiteral("lighthouse_gibmag_horizontal_1"));
        lighthouse_gibmag_horizontal_1->setGeometry(QRect(160, 200, 111, 21));
        lighthouse_gibmag_horizontal_1->setFont(font3);
        lighthouse_gibmag_horizontal_1->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_gibmag_horizontal_1->setReadOnly(true);
        x_24 = new QLabel(frame_6);
        x_24->setObjectName(QStringLiteral("x_24"));
        x_24->setGeometry(QRect(20, 200, 141, 20));
        x_24->setFont(font2);
        x_26 = new QLabel(frame_6);
        x_26->setObjectName(QStringLiteral("x_26"));
        x_26->setGeometry(QRect(20, 220, 141, 20));
        x_26->setFont(font2);
        lighthouse_phase_horizontal_slider_1 = new QSlider(frame_6);
        lighthouse_phase_horizontal_slider_1->setObjectName(QStringLiteral("lighthouse_phase_horizontal_slider_1"));
        lighthouse_phase_horizontal_slider_1->setGeometry(QRect(280, 40, 160, 21));
        lighthouse_phase_horizontal_slider_1->setMinimum(0);
        lighthouse_phase_horizontal_slider_1->setMaximum(99);
        lighthouse_phase_horizontal_slider_1->setValue(50);
        lighthouse_phase_horizontal_slider_1->setOrientation(Qt::Horizontal);
        lighthouse_phase_vertical_slider_1 = new QSlider(frame_6);
        lighthouse_phase_vertical_slider_1->setObjectName(QStringLiteral("lighthouse_phase_vertical_slider_1"));
        lighthouse_phase_vertical_slider_1->setGeometry(QRect(280, 60, 160, 21));
        lighthouse_phase_vertical_slider_1->setMinimum(0);
        lighthouse_phase_vertical_slider_1->setMaximum(99);
        lighthouse_phase_vertical_slider_1->setValue(50);
        lighthouse_phase_vertical_slider_1->setOrientation(Qt::Horizontal);
        lighthouse_tilt_horizontal_slider_1 = new QSlider(frame_6);
        lighthouse_tilt_horizontal_slider_1->setObjectName(QStringLiteral("lighthouse_tilt_horizontal_slider_1"));
        lighthouse_tilt_horizontal_slider_1->setGeometry(QRect(280, 80, 160, 21));
        lighthouse_tilt_horizontal_slider_1->setMinimum(0);
        lighthouse_tilt_horizontal_slider_1->setMaximum(99);
        lighthouse_tilt_horizontal_slider_1->setValue(50);
        lighthouse_tilt_horizontal_slider_1->setOrientation(Qt::Horizontal);
        lighthouse_tilt_vertical_slider_1 = new QSlider(frame_6);
        lighthouse_tilt_vertical_slider_1->setObjectName(QStringLiteral("lighthouse_tilt_vertical_slider_1"));
        lighthouse_tilt_vertical_slider_1->setGeometry(QRect(280, 100, 160, 21));
        lighthouse_tilt_vertical_slider_1->setMinimum(0);
        lighthouse_tilt_vertical_slider_1->setMaximum(99);
        lighthouse_tilt_vertical_slider_1->setValue(50);
        lighthouse_tilt_vertical_slider_1->setOrientation(Qt::Horizontal);
        lighthouse_curve_horizontal_slider_1 = new QSlider(frame_6);
        lighthouse_curve_horizontal_slider_1->setObjectName(QStringLiteral("lighthouse_curve_horizontal_slider_1"));
        lighthouse_curve_horizontal_slider_1->setGeometry(QRect(280, 120, 160, 21));
        lighthouse_curve_horizontal_slider_1->setMinimum(0);
        lighthouse_curve_horizontal_slider_1->setMaximum(99);
        lighthouse_curve_horizontal_slider_1->setValue(50);
        lighthouse_curve_horizontal_slider_1->setOrientation(Qt::Horizontal);
        lighthouse_curve_vertical_slider_1 = new QSlider(frame_6);
        lighthouse_curve_vertical_slider_1->setObjectName(QStringLiteral("lighthouse_curve_vertical_slider_1"));
        lighthouse_curve_vertical_slider_1->setGeometry(QRect(280, 140, 160, 21));
        lighthouse_curve_vertical_slider_1->setMinimum(0);
        lighthouse_curve_vertical_slider_1->setMaximum(99);
        lighthouse_curve_vertical_slider_1->setValue(50);
        lighthouse_curve_vertical_slider_1->setOrientation(Qt::Horizontal);
        lighthouse_gibmag_horizontal_slider_1 = new QSlider(frame_6);
        lighthouse_gibmag_horizontal_slider_1->setObjectName(QStringLiteral("lighthouse_gibmag_horizontal_slider_1"));
        lighthouse_gibmag_horizontal_slider_1->setGeometry(QRect(280, 200, 160, 21));
        lighthouse_gibmag_horizontal_slider_1->setMinimum(0);
        lighthouse_gibmag_horizontal_slider_1->setMaximum(99);
        lighthouse_gibmag_horizontal_slider_1->setValue(50);
        lighthouse_gibmag_horizontal_slider_1->setOrientation(Qt::Horizontal);
        lighthouse_gibphase_vertical_slider_1 = new QSlider(frame_6);
        lighthouse_gibphase_vertical_slider_1->setObjectName(QStringLiteral("lighthouse_gibphase_vertical_slider_1"));
        lighthouse_gibphase_vertical_slider_1->setGeometry(QRect(280, 180, 160, 21));
        lighthouse_gibphase_vertical_slider_1->setMinimum(0);
        lighthouse_gibphase_vertical_slider_1->setMaximum(99);
        lighthouse_gibphase_vertical_slider_1->setValue(50);
        lighthouse_gibphase_vertical_slider_1->setOrientation(Qt::Horizontal);
        lighthouse_gibphase_horizontal_slider_1 = new QSlider(frame_6);
        lighthouse_gibphase_horizontal_slider_1->setObjectName(QStringLiteral("lighthouse_gibphase_horizontal_slider_1"));
        lighthouse_gibphase_horizontal_slider_1->setGeometry(QRect(280, 160, 160, 21));
        lighthouse_gibphase_horizontal_slider_1->setMinimum(0);
        lighthouse_gibphase_horizontal_slider_1->setMaximum(99);
        lighthouse_gibphase_horizontal_slider_1->setValue(50);
        lighthouse_gibphase_horizontal_slider_1->setOrientation(Qt::Horizontal);
        lighthouse_gibmag_vertical_slider_1 = new QSlider(frame_6);
        lighthouse_gibmag_vertical_slider_1->setObjectName(QStringLiteral("lighthouse_gibmag_vertical_slider_1"));
        lighthouse_gibmag_vertical_slider_1->setGeometry(QRect(280, 220, 160, 21));
        lighthouse_gibmag_vertical_slider_1->setMinimum(0);
        lighthouse_gibmag_vertical_slider_1->setMaximum(99);
        lighthouse_gibmag_vertical_slider_1->setValue(50);
        lighthouse_gibmag_vertical_slider_1->setOrientation(Qt::Horizontal);
        estimate_factory_calibration_values = new QPushButton(frame_6);
        estimate_factory_calibration_values->setObjectName(QStringLiteral("estimate_factory_calibration_values"));
        estimate_factory_calibration_values->setGeometry(QRect(450, 10, 99, 27));
        reset_factory_calibration_values = new QPushButton(frame_6);
        reset_factory_calibration_values->setObjectName(QStringLiteral("reset_factory_calibration_values"));
        reset_factory_calibration_values->setGeometry(QRect(450, 40, 99, 27));
        estimate_lighthouse_1 = new QCheckBox(frame_6);
        estimate_lighthouse_1->setObjectName(QStringLiteral("estimate_lighthouse_1"));
        estimate_lighthouse_1->setGeometry(QRect(240, 10, 211, 22));
        estimate_lighthouse_1->setChecked(true);
        estimate_factory_calibration_values_epnp = new QPushButton(frame_6);
        estimate_factory_calibration_values_epnp->setObjectName(QStringLiteral("estimate_factory_calibration_values_epnp"));
        estimate_factory_calibration_values_epnp->setGeometry(QRect(450, 70, 99, 27));
        estimate_factory_calibration_values_multi = new QPushButton(frame_6);
        estimate_factory_calibration_values_multi->setObjectName(QStringLiteral("estimate_factory_calibration_values_multi"));
        estimate_factory_calibration_values_multi->setGeometry(QRect(450, 100, 99, 27));
        frame_8 = new QFrame(tab_5);
        frame_8->setObjectName(QStringLiteral("frame_8"));
        frame_8->setGeometry(QRect(20, 290, 561, 251));
        frame_8->setFrameShape(QFrame::StyledPanel);
        frame_8->setFrameShadow(QFrame::Raised);
        lighthouse_4 = new QLabel(frame_8);
        lighthouse_4->setObjectName(QStringLiteral("lighthouse_4"));
        lighthouse_4->setGeometry(QRect(10, 0, 101, 21));
        lighthouse_4->setFont(font1);
        x_27 = new QLabel(frame_8);
        x_27->setObjectName(QStringLiteral("x_27"));
        x_27->setGeometry(QRect(20, 70, 141, 20));
        x_27->setFont(font2);
        lighthouse_phase_horizontal_2 = new QLineEdit(frame_8);
        lighthouse_phase_horizontal_2->setObjectName(QStringLiteral("lighthouse_phase_horizontal_2"));
        lighthouse_phase_horizontal_2->setGeometry(QRect(160, 30, 111, 21));
        lighthouse_phase_horizontal_2->setFont(font3);
        lighthouse_phase_horizontal_2->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_phase_horizontal_2->setReadOnly(true);
        lighthouse_phase_vertical_2 = new QLineEdit(frame_8);
        lighthouse_phase_vertical_2->setObjectName(QStringLiteral("lighthouse_phase_vertical_2"));
        lighthouse_phase_vertical_2->setGeometry(QRect(160, 50, 111, 21));
        lighthouse_phase_vertical_2->setFont(font3);
        lighthouse_phase_vertical_2->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_phase_vertical_2->setReadOnly(true);
        x_28 = new QLabel(frame_8);
        x_28->setObjectName(QStringLiteral("x_28"));
        x_28->setGeometry(QRect(20, 110, 141, 20));
        x_28->setFont(font2);
        lighthouse_tilt_horizontal_2 = new QLineEdit(frame_8);
        lighthouse_tilt_horizontal_2->setObjectName(QStringLiteral("lighthouse_tilt_horizontal_2"));
        lighthouse_tilt_horizontal_2->setGeometry(QRect(160, 70, 111, 21));
        lighthouse_tilt_horizontal_2->setFont(font3);
        lighthouse_tilt_horizontal_2->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_tilt_horizontal_2->setReadOnly(true);
        x_29 = new QLabel(frame_8);
        x_29->setObjectName(QStringLiteral("x_29"));
        x_29->setGeometry(QRect(20, 30, 141, 20));
        x_29->setFont(font2);
        lighthouse_tilt_vertical_2 = new QLineEdit(frame_8);
        lighthouse_tilt_vertical_2->setObjectName(QStringLiteral("lighthouse_tilt_vertical_2"));
        lighthouse_tilt_vertical_2->setGeometry(QRect(160, 90, 111, 21));
        lighthouse_tilt_vertical_2->setFont(font3);
        lighthouse_tilt_vertical_2->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_tilt_vertical_2->setReadOnly(true);
        x_30 = new QLabel(frame_8);
        x_30->setObjectName(QStringLiteral("x_30"));
        x_30->setGeometry(QRect(20, 50, 141, 20));
        x_30->setFont(font2);
        lighthouse_curve_horizontal_2 = new QLineEdit(frame_8);
        lighthouse_curve_horizontal_2->setObjectName(QStringLiteral("lighthouse_curve_horizontal_2"));
        lighthouse_curve_horizontal_2->setGeometry(QRect(160, 110, 111, 21));
        lighthouse_curve_horizontal_2->setFont(font3);
        lighthouse_curve_horizontal_2->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_curve_horizontal_2->setReadOnly(true);
        x_31 = new QLabel(frame_8);
        x_31->setObjectName(QStringLiteral("x_31"));
        x_31->setGeometry(QRect(20, 90, 141, 20));
        x_31->setFont(font2);
        x_32 = new QLabel(frame_8);
        x_32->setObjectName(QStringLiteral("x_32"));
        x_32->setGeometry(QRect(20, 130, 141, 20));
        x_32->setFont(font2);
        lighthouse_curve_vertical_2 = new QLineEdit(frame_8);
        lighthouse_curve_vertical_2->setObjectName(QStringLiteral("lighthouse_curve_vertical_2"));
        lighthouse_curve_vertical_2->setGeometry(QRect(160, 130, 111, 21));
        lighthouse_curve_vertical_2->setFont(font3);
        lighthouse_curve_vertical_2->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_curve_vertical_2->setReadOnly(true);
        x_33 = new QLabel(frame_8);
        x_33->setObjectName(QStringLiteral("x_33"));
        x_33->setGeometry(QRect(20, 150, 141, 20));
        x_33->setFont(font2);
        lighthouse_gibphase_horizontal_2 = new QLineEdit(frame_8);
        lighthouse_gibphase_horizontal_2->setObjectName(QStringLiteral("lighthouse_gibphase_horizontal_2"));
        lighthouse_gibphase_horizontal_2->setGeometry(QRect(160, 150, 111, 21));
        lighthouse_gibphase_horizontal_2->setFont(font3);
        lighthouse_gibphase_horizontal_2->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_gibphase_horizontal_2->setReadOnly(true);
        lighthouse_gibphase_vertical_2 = new QLineEdit(frame_8);
        lighthouse_gibphase_vertical_2->setObjectName(QStringLiteral("lighthouse_gibphase_vertical_2"));
        lighthouse_gibphase_vertical_2->setGeometry(QRect(160, 170, 111, 21));
        lighthouse_gibphase_vertical_2->setFont(font3);
        lighthouse_gibphase_vertical_2->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_gibphase_vertical_2->setReadOnly(true);
        x_34 = new QLabel(frame_8);
        x_34->setObjectName(QStringLiteral("x_34"));
        x_34->setGeometry(QRect(20, 170, 141, 20));
        x_34->setFont(font2);
        lighthouse_gibmag_vertical_2 = new QLineEdit(frame_8);
        lighthouse_gibmag_vertical_2->setObjectName(QStringLiteral("lighthouse_gibmag_vertical_2"));
        lighthouse_gibmag_vertical_2->setGeometry(QRect(160, 210, 111, 21));
        lighthouse_gibmag_vertical_2->setFont(font3);
        lighthouse_gibmag_vertical_2->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_gibmag_vertical_2->setReadOnly(true);
        lighthouse_gibmag_horizontal_2 = new QLineEdit(frame_8);
        lighthouse_gibmag_horizontal_2->setObjectName(QStringLiteral("lighthouse_gibmag_horizontal_2"));
        lighthouse_gibmag_horizontal_2->setGeometry(QRect(160, 190, 111, 21));
        lighthouse_gibmag_horizontal_2->setFont(font3);
        lighthouse_gibmag_horizontal_2->setLocale(QLocale(QLocale::German, QLocale::Germany));
        lighthouse_gibmag_horizontal_2->setReadOnly(true);
        x_35 = new QLabel(frame_8);
        x_35->setObjectName(QStringLiteral("x_35"));
        x_35->setGeometry(QRect(20, 190, 141, 20));
        x_35->setFont(font2);
        x_36 = new QLabel(frame_8);
        x_36->setObjectName(QStringLiteral("x_36"));
        x_36->setGeometry(QRect(20, 210, 141, 20));
        x_36->setFont(font2);
        lighthouse_curve_vertical_slider_2 = new QSlider(frame_8);
        lighthouse_curve_vertical_slider_2->setObjectName(QStringLiteral("lighthouse_curve_vertical_slider_2"));
        lighthouse_curve_vertical_slider_2->setGeometry(QRect(280, 130, 160, 21));
        lighthouse_curve_vertical_slider_2->setMinimum(0);
        lighthouse_curve_vertical_slider_2->setMaximum(99);
        lighthouse_curve_vertical_slider_2->setValue(50);
        lighthouse_curve_vertical_slider_2->setOrientation(Qt::Horizontal);
        lighthouse_phase_horizontal_slider_2 = new QSlider(frame_8);
        lighthouse_phase_horizontal_slider_2->setObjectName(QStringLiteral("lighthouse_phase_horizontal_slider_2"));
        lighthouse_phase_horizontal_slider_2->setGeometry(QRect(280, 30, 160, 21));
        lighthouse_phase_horizontal_slider_2->setMinimum(0);
        lighthouse_phase_horizontal_slider_2->setMaximum(99);
        lighthouse_phase_horizontal_slider_2->setValue(50);
        lighthouse_phase_horizontal_slider_2->setOrientation(Qt::Horizontal);
        lighthouse_curve_horizontal_slider_2 = new QSlider(frame_8);
        lighthouse_curve_horizontal_slider_2->setObjectName(QStringLiteral("lighthouse_curve_horizontal_slider_2"));
        lighthouse_curve_horizontal_slider_2->setGeometry(QRect(280, 110, 160, 21));
        lighthouse_curve_horizontal_slider_2->setMinimum(0);
        lighthouse_curve_horizontal_slider_2->setMaximum(99);
        lighthouse_curve_horizontal_slider_2->setValue(50);
        lighthouse_curve_horizontal_slider_2->setOrientation(Qt::Horizontal);
        lighthouse_tilt_vertical_slider_2 = new QSlider(frame_8);
        lighthouse_tilt_vertical_slider_2->setObjectName(QStringLiteral("lighthouse_tilt_vertical_slider_2"));
        lighthouse_tilt_vertical_slider_2->setGeometry(QRect(280, 90, 160, 21));
        lighthouse_tilt_vertical_slider_2->setMinimum(0);
        lighthouse_tilt_vertical_slider_2->setMaximum(99);
        lighthouse_tilt_vertical_slider_2->setValue(50);
        lighthouse_tilt_vertical_slider_2->setOrientation(Qt::Horizontal);
        lighthouse_phase_vertical_slider_2 = new QSlider(frame_8);
        lighthouse_phase_vertical_slider_2->setObjectName(QStringLiteral("lighthouse_phase_vertical_slider_2"));
        lighthouse_phase_vertical_slider_2->setGeometry(QRect(280, 50, 160, 21));
        lighthouse_phase_vertical_slider_2->setMinimum(0);
        lighthouse_phase_vertical_slider_2->setMaximum(99);
        lighthouse_phase_vertical_slider_2->setValue(50);
        lighthouse_phase_vertical_slider_2->setOrientation(Qt::Horizontal);
        lighthouse_tilt_horizontal_slider_2 = new QSlider(frame_8);
        lighthouse_tilt_horizontal_slider_2->setObjectName(QStringLiteral("lighthouse_tilt_horizontal_slider_2"));
        lighthouse_tilt_horizontal_slider_2->setGeometry(QRect(280, 70, 160, 21));
        lighthouse_tilt_horizontal_slider_2->setMinimum(0);
        lighthouse_tilt_horizontal_slider_2->setMaximum(99);
        lighthouse_tilt_horizontal_slider_2->setValue(50);
        lighthouse_tilt_horizontal_slider_2->setOrientation(Qt::Horizontal);
        lighthouse_gibphase_horizontal_slider_2 = new QSlider(frame_8);
        lighthouse_gibphase_horizontal_slider_2->setObjectName(QStringLiteral("lighthouse_gibphase_horizontal_slider_2"));
        lighthouse_gibphase_horizontal_slider_2->setGeometry(QRect(280, 150, 160, 21));
        lighthouse_gibphase_horizontal_slider_2->setMinimum(0);
        lighthouse_gibphase_horizontal_slider_2->setMaximum(99);
        lighthouse_gibphase_horizontal_slider_2->setValue(50);
        lighthouse_gibphase_horizontal_slider_2->setOrientation(Qt::Horizontal);
        lighthouse_gibmag_vertical_slider_2 = new QSlider(frame_8);
        lighthouse_gibmag_vertical_slider_2->setObjectName(QStringLiteral("lighthouse_gibmag_vertical_slider_2"));
        lighthouse_gibmag_vertical_slider_2->setGeometry(QRect(280, 210, 160, 21));
        lighthouse_gibmag_vertical_slider_2->setMinimum(0);
        lighthouse_gibmag_vertical_slider_2->setMaximum(99);
        lighthouse_gibmag_vertical_slider_2->setValue(50);
        lighthouse_gibmag_vertical_slider_2->setOrientation(Qt::Horizontal);
        lighthouse_gibphase_vertical_slider_2 = new QSlider(frame_8);
        lighthouse_gibphase_vertical_slider_2->setObjectName(QStringLiteral("lighthouse_gibphase_vertical_slider_2"));
        lighthouse_gibphase_vertical_slider_2->setGeometry(QRect(280, 170, 160, 21));
        lighthouse_gibphase_vertical_slider_2->setMinimum(0);
        lighthouse_gibphase_vertical_slider_2->setMaximum(99);
        lighthouse_gibphase_vertical_slider_2->setValue(50);
        lighthouse_gibphase_vertical_slider_2->setOrientation(Qt::Horizontal);
        lighthouse_gibmag_horizontal_slider_2 = new QSlider(frame_8);
        lighthouse_gibmag_horizontal_slider_2->setObjectName(QStringLiteral("lighthouse_gibmag_horizontal_slider_2"));
        lighthouse_gibmag_horizontal_slider_2->setGeometry(QRect(280, 190, 160, 21));
        lighthouse_gibmag_horizontal_slider_2->setMinimum(0);
        lighthouse_gibmag_horizontal_slider_2->setMaximum(99);
        lighthouse_gibmag_horizontal_slider_2->setValue(50);
        lighthouse_gibmag_horizontal_slider_2->setOrientation(Qt::Horizontal);
        estimate_lighthouse_2 = new QCheckBox(frame_8);
        estimate_lighthouse_2->setObjectName(QStringLiteral("estimate_lighthouse_2"));
        estimate_lighthouse_2->setGeometry(QRect(240, 10, 211, 22));
        tabWidget->addTab(tab_5, QString());
        frame = new QFrame(RoboyDarkRoom);
        frame->setObjectName(QStringLiteral("frame"));
        frame->setGeometry(QRect(600, 70, 281, 581));
        frame->setFrameShape(QFrame::StyledPanel);
        frame->setFrameShadow(QFrame::Raised);
        remove_tracked_object = new QPushButton(frame);
        remove_tracked_object->setObjectName(QStringLiteral("remove_tracked_object"));
        remove_tracked_object->setGeometry(QRect(212, 550, 31, 27));
        add_tracked_object = new QPushButton(frame);
        add_tracked_object->setObjectName(QStringLiteral("add_tracked_object"));
        add_tracked_object->setGeometry(QRect(240, 550, 31, 27));
        tracked_objects = new QScrollArea(frame);
        tracked_objects->setObjectName(QStringLiteral("tracked_objects"));
        tracked_objects->setGeometry(QRect(10, 20, 261, 531));
        tracked_objects->setWidgetResizable(true);
        scrollAreaWidgetContents = new QWidget();
        scrollAreaWidgetContents->setObjectName(QStringLiteral("scrollAreaWidgetContents"));
        scrollAreaWidgetContents->setGeometry(QRect(0, 0, 259, 529));
        tracked_objects->setWidget(scrollAreaWidgetContents);
        label_9 = new QLabel(frame);
        label_9->setObjectName(QStringLiteral("label_9"));
        label_9->setGeometry(QRect(160, 0, 111, 17));

        retranslateUi(RoboyDarkRoom);

        tabWidget->setCurrentIndex(0);


        QMetaObject::connectSlotsByName(RoboyDarkRoom);
    } // setupUi

    void retranslateUi(QWidget *RoboyDarkRoom)
    {
        RoboyDarkRoom->setWindowTitle(QApplication::translate("RoboyDarkRoom", "Form", Q_NULLPTR));
        header->setText(QApplication::translate("RoboyDarkRoom", "DARKROOM", Q_NULLPTR));
        show_rays->setText(QApplication::translate("RoboyDarkRoom", "show rays", Q_NULLPTR));
        show_distances->setText(QApplication::translate("RoboyDarkRoom", "show distances", Q_NULLPTR));
        clear_all->setText(QApplication::translate("RoboyDarkRoom", "clear all", Q_NULLPTR));
        connect_roboy->setText(QApplication::translate("RoboyDarkRoom", "connect Roboy", Q_NULLPTR));
        connect_object->setText(QApplication::translate("RoboyDarkRoom", "connect", Q_NULLPTR));
        broadcast_ip->setText(QApplication::translate("RoboyDarkRoom", "192.168.0.255", Q_NULLPTR));
        broadcast_port->setText(QApplication::translate("RoboyDarkRoom", "8000", Q_NULLPTR));
        pose_correction_least_squares->setText(QApplication::translate("RoboyDarkRoom", "pose correction (least squares)", Q_NULLPTR));
        use_steamVR_lighthouse_poses->setText(QApplication::translate("RoboyDarkRoom", "use steamVR lighthouse poses", Q_NULLPTR));
        compare_to_steamVR->setText(QApplication::translate("RoboyDarkRoom", "compare to SteamVR", Q_NULLPTR));
        reset_lighthouse_poses->setText(QApplication::translate("RoboyDarkRoom", "reset lighthouse poses", Q_NULLPTR));
        switch_lighthouses->setText(QApplication::translate("RoboyDarkRoom", "switch lighthouses", Q_NULLPTR));
        record->setText(QApplication::translate("RoboyDarkRoom", "record", Q_NULLPTR));
        align_to_vive_controller->setText(QApplication::translate("RoboyDarkRoom", "align tracked object to Vive contoller", Q_NULLPTR));
#ifndef QT_NO_TOOLTIP
        object_pose_estimation_least_squares->setToolTip(QString());
#endif // QT_NO_TOOLTIP
        object_pose_estimation_least_squares->setText(QApplication::translate("RoboyDarkRoom", "object pose estimation (least squares)", Q_NULLPTR));
#ifndef QT_NO_TOOLTIP
        pose_estimation_relativ_sensor_distances->setToolTip(QString());
#endif // QT_NO_TOOLTIP
        pose_estimation_relativ_sensor_distances->setText(QApplication::translate("RoboyDarkRoom", "pose estimation (using relativ)", Q_NULLPTR));
#ifndef QT_NO_TOOLTIP
        pose_estimation_epnp->setToolTip(QString());
#endif // QT_NO_TOOLTIP
        pose_estimation_epnp->setText(QApplication::translate("RoboyDarkRoom", "pose estimation (epnp)", Q_NULLPTR));
#ifndef QT_NO_TOOLTIP
        pose_estimation_multi_lighthouse->setToolTip(QString());
#endif // QT_NO_TOOLTIP
        pose_estimation_multi_lighthouse->setText(QApplication::translate("RoboyDarkRoom", "pose estimation (multiLighthouse)", Q_NULLPTR));
        triangulate->setText(QApplication::translate("RoboyDarkRoom", "triangulate", Q_NULLPTR));
#ifndef QT_NO_TOOLTIP
        position_estimation_relativ_sensor_distances->setToolTip(QString());
#endif // QT_NO_TOOLTIP
        position_estimation_relativ_sensor_distances->setText(QApplication::translate("RoboyDarkRoom", "position estimation (using relativ)", Q_NULLPTR));
        calibrate_relative_distances->setText(QApplication::translate("RoboyDarkRoom", "calibrate relative distances", Q_NULLPTR));
        random_pose_pitch->setText(QApplication::translate("RoboyDarkRoom", "p", Q_NULLPTR));
        random_pose->setText(QApplication::translate("RoboyDarkRoom", "random pose", Q_NULLPTR));
        random_pose_yaw->setText(QApplication::translate("RoboyDarkRoom", "y", Q_NULLPTR));
        simulate->setText(QApplication::translate("RoboyDarkRoom", "simulate", Q_NULLPTR));
        random_pose_y->setText(QApplication::translate("RoboyDarkRoom", "y", Q_NULLPTR));
        random_pose_x->setText(QApplication::translate("RoboyDarkRoom", "x", Q_NULLPTR));
        random_pose_roll->setText(QApplication::translate("RoboyDarkRoom", "r", Q_NULLPTR));
        reset_pose->setText(QApplication::translate("RoboyDarkRoom", "reset pose", Q_NULLPTR));
        random_pose_z->setText(QApplication::translate("RoboyDarkRoom", "z", Q_NULLPTR));
        tabWidget->setTabText(tabWidget->indexOf(tab), QApplication::translate("RoboyDarkRoom", "control", Q_NULLPTR));
        lighthouse_1->setText(QApplication::translate("RoboyDarkRoom", "lighthouse 1", Q_NULLPTR));
        x_1->setText(QApplication::translate("RoboyDarkRoom", "firmware version", Q_NULLPTR));
        lighthouse_firmware_version_1->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        lighthouse_protocol_version_1->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        x_3->setText(QApplication::translate("RoboyDarkRoom", "protocol version", Q_NULLPTR));
        lighthouse_ID_1->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        x_4->setText(QApplication::translate("RoboyDarkRoom", "ID", Q_NULLPTR));
        lighthouse_hardware_version_1->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        x_5->setText(QApplication::translate("RoboyDarkRoom", "Hardware version", Q_NULLPTR));
        lighthouse_acc_x_1->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        x_6->setText(QApplication::translate("RoboyDarkRoom", "acc_x", Q_NULLPTR));
        x_7->setText(QApplication::translate("RoboyDarkRoom", "acc_y", Q_NULLPTR));
        lighthouse_acc_y_1->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        x_8->setText(QApplication::translate("RoboyDarkRoom", "acc_z", Q_NULLPTR));
        lighthouse_acc_z_1->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        x_9->setText(QApplication::translate("RoboyDarkRoom", "Selected Mode", Q_NULLPTR));
        lighthouse_selected_mode_1->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        x_37->setText(QApplication::translate("RoboyDarkRoom", "fault detect flags", Q_NULLPTR));
        lighthouse_fault_detect_flags_1->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        x_38->setText(QApplication::translate("RoboyDarkRoom", "desync counter", Q_NULLPTR));
        x_39->setText(QApplication::translate("RoboyDarkRoom", "phase 1", Q_NULLPTR));
        lighthouse_phase0_1->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        x_40->setText(QApplication::translate("RoboyDarkRoom", "phase 0", Q_NULLPTR));
        lighthouse_phase1_1->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        x_41->setText(QApplication::translate("RoboyDarkRoom", "tilt 0", Q_NULLPTR));
        lighthouse_tilt1_1->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        lighthouse_tilt0_1->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        x_42->setText(QApplication::translate("RoboyDarkRoom", "tilt 1", Q_NULLPTR));
        x_43->setText(QApplication::translate("RoboyDarkRoom", "gibmag 1", Q_NULLPTR));
        lighthouse_gibmag0_1->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        x_44->setText(QApplication::translate("RoboyDarkRoom", "gibphase 0", Q_NULLPTR));
        x_45->setText(QApplication::translate("RoboyDarkRoom", "gibmag 0", Q_NULLPTR));
        lighthouse_gibmag1_1->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        lighthouse_gibphase1_1->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        lighthouse_gibphase0_1->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        x_46->setText(QApplication::translate("RoboyDarkRoom", "gibphase 1", Q_NULLPTR));
        lighthouse_desync_counter_1->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        lighthouse_curve1_1->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        lighthouse_curve0_1->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        x_57->setText(QApplication::translate("RoboyDarkRoom", "curve 0", Q_NULLPTR));
        x_58->setText(QApplication::translate("RoboyDarkRoom", "curve 1", Q_NULLPTR));
        lighthouse_use_phase_1->setText(QApplication::translate("RoboyDarkRoom", "phase", Q_NULLPTR));
        lighthouse_use_tilt_1->setText(QApplication::translate("RoboyDarkRoom", "tilt", Q_NULLPTR));
        lighthouse_use_curve_1->setText(QApplication::translate("RoboyDarkRoom", "curve", Q_NULLPTR));
        lighthouse_use_gibbous_1->setText(QApplication::translate("RoboyDarkRoom", "gibbous", Q_NULLPTR));
        lighthouse_2->setText(QApplication::translate("RoboyDarkRoom", "lighthouse 2", Q_NULLPTR));
        x_2->setText(QApplication::translate("RoboyDarkRoom", "firmware version", Q_NULLPTR));
        lighthouse_firmware_version_2->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        lighthouse_protocol_version_2->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        x_10->setText(QApplication::translate("RoboyDarkRoom", "protocol version", Q_NULLPTR));
        lighthouse_ID_2->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        x_11->setText(QApplication::translate("RoboyDarkRoom", "ID", Q_NULLPTR));
        lighthouse_hardware_version_2->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        x_12->setText(QApplication::translate("RoboyDarkRoom", "Hardware version", Q_NULLPTR));
        lighthouse_acc_x_2->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        x_13->setText(QApplication::translate("RoboyDarkRoom", "acc_x", Q_NULLPTR));
        x_14->setText(QApplication::translate("RoboyDarkRoom", "acc_y", Q_NULLPTR));
        lighthouse_acc_y_2->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        x_15->setText(QApplication::translate("RoboyDarkRoom", "acc_z", Q_NULLPTR));
        lighthouse_acc_z_2->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        x_16->setText(QApplication::translate("RoboyDarkRoom", "Selected Mode", Q_NULLPTR));
        lighthouse_selected_mode_2->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        lighthouse_fault_detect_flags_2->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        x_47->setText(QApplication::translate("RoboyDarkRoom", "desync counter", Q_NULLPTR));
        x_48->setText(QApplication::translate("RoboyDarkRoom", "fault detect flags", Q_NULLPTR));
        x_49->setText(QApplication::translate("RoboyDarkRoom", "tilt 1", Q_NULLPTR));
        x_50->setText(QApplication::translate("RoboyDarkRoom", "phase 0", Q_NULLPTR));
        x_51->setText(QApplication::translate("RoboyDarkRoom", "tilt 0", Q_NULLPTR));
        x_52->setText(QApplication::translate("RoboyDarkRoom", "gibmag 1", Q_NULLPTR));
        x_53->setText(QApplication::translate("RoboyDarkRoom", "phase 1", Q_NULLPTR));
        x_54->setText(QApplication::translate("RoboyDarkRoom", "gibphase 0", Q_NULLPTR));
        x_55->setText(QApplication::translate("RoboyDarkRoom", "gibphase 1", Q_NULLPTR));
        x_56->setText(QApplication::translate("RoboyDarkRoom", "gibmag 0", Q_NULLPTR));
        lighthouse_tilt0_2->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        lighthouse_gibphase1_2->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        lighthouse_gibmag1_2->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        lighthouse_tilt1_2->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        lighthouse_phase1_2->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        lighthouse_gibphase0_2->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        lighthouse_gibmag0_2->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        lighthouse_phase0_2->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        lighthouse_desync_counter_2->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        x_59->setText(QApplication::translate("RoboyDarkRoom", "curve 0", Q_NULLPTR));
        lighthouse_curve0_2->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        x_60->setText(QApplication::translate("RoboyDarkRoom", "curve 1", Q_NULLPTR));
        lighthouse_curve1_2->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        lighthouse_use_phase_2->setText(QApplication::translate("RoboyDarkRoom", "phase", Q_NULLPTR));
        lighthouse_use_tilt_2->setText(QApplication::translate("RoboyDarkRoom", "tilt", Q_NULLPTR));
        lighthouse_use_curve_2->setText(QApplication::translate("RoboyDarkRoom", "curve", Q_NULLPTR));
        lighthouse_use_gibbous_2->setText(QApplication::translate("RoboyDarkRoom", "gibbous", Q_NULLPTR));
        switch_lighthouse_calibration_values->setText(QApplication::translate("RoboyDarkRoom", "switch lighthouse calibration values", Q_NULLPTR));
        tabWidget->setTabText(tabWidget->indexOf(tab_6), QApplication::translate("RoboyDarkRoom", "lighthouse", Q_NULLPTR));
        label->setText(QApplication::translate("RoboyDarkRoom", "horizontal angle lighthouse 1", Q_NULLPTR));
        sensor_selector_label->setText(QApplication::translate("RoboyDarkRoom", "sensor", Q_NULLPTR));
        label_2->setText(QApplication::translate("RoboyDarkRoom", "vertical angle lighthouse 1", Q_NULLPTR));
        label_3->setText(QApplication::translate("RoboyDarkRoom", "vertical angle lighthouse 2", Q_NULLPTR));
        label_4->setText(QApplication::translate("RoboyDarkRoom", "horizontal angle lighthouse 2", Q_NULLPTR));
        tabWidget->setTabText(tabWidget->indexOf(tab_2), QApplication::translate("RoboyDarkRoom", "angles", Q_NULLPTR));
        label_5->setText(QApplication::translate("RoboyDarkRoom", "frequencies horizontal lighthouse 1", Q_NULLPTR));
        label_7->setText(QApplication::translate("RoboyDarkRoom", "frequencies vertical lighthouse 1", Q_NULLPTR));
        label_6->setText(QApplication::translate("RoboyDarkRoom", "frequencies horizontal lighthouse 2", Q_NULLPTR));
        label_8->setText(QApplication::translate("RoboyDarkRoom", "frequencies vertical lighthouse 2", Q_NULLPTR));
        tabWidget->setTabText(tabWidget->indexOf(tab_3), QApplication::translate("RoboyDarkRoom", "statistics", Q_NULLPTR));
        tabWidget->setTabText(tabWidget->indexOf(tab_4), QApplication::translate("RoboyDarkRoom", "trackedObjects", Q_NULLPTR));
        lighthouse_3->setText(QApplication::translate("RoboyDarkRoom", "lighthouse 1", Q_NULLPTR));
        x_17->setText(QApplication::translate("RoboyDarkRoom", "tilt horizontal", Q_NULLPTR));
        lighthouse_phase_horizontal_1->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        lighthouse_phase_vertical_1->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        x_18->setText(QApplication::translate("RoboyDarkRoom", "curve horizontal", Q_NULLPTR));
        lighthouse_tilt_horizontal_1->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        x_19->setText(QApplication::translate("RoboyDarkRoom", "phase horizontal", Q_NULLPTR));
        lighthouse_tilt_vertical_1->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        x_20->setText(QApplication::translate("RoboyDarkRoom", "phase vertical", Q_NULLPTR));
        lighthouse_curve_horizontal_1->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        x_21->setText(QApplication::translate("RoboyDarkRoom", "tilt vertical", Q_NULLPTR));
        x_22->setText(QApplication::translate("RoboyDarkRoom", "curve vertical", Q_NULLPTR));
        lighthouse_curve_vertical_1->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        x_23->setText(QApplication::translate("RoboyDarkRoom", "gibphase horizontal", Q_NULLPTR));
        lighthouse_gibphase_horizontal_1->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        lighthouse_gibphase_vertical_1->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        x_25->setText(QApplication::translate("RoboyDarkRoom", "gibphase vertical", Q_NULLPTR));
        lighthouse_gibmag_vertical_1->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        lighthouse_gibmag_horizontal_1->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        x_24->setText(QApplication::translate("RoboyDarkRoom", "gibmag horizontal", Q_NULLPTR));
        x_26->setText(QApplication::translate("RoboyDarkRoom", "gibmag vertical", Q_NULLPTR));
        estimate_factory_calibration_values->setText(QApplication::translate("RoboyDarkRoom", "estimate", Q_NULLPTR));
        reset_factory_calibration_values->setText(QApplication::translate("RoboyDarkRoom", "reset", Q_NULLPTR));
        estimate_lighthouse_1->setText(QApplication::translate("RoboyDarkRoom", "estimate for lighthouse 1", Q_NULLPTR));
        estimate_factory_calibration_values_epnp->setText(QApplication::translate("RoboyDarkRoom", "estimate epnp", Q_NULLPTR));
        estimate_factory_calibration_values_multi->setText(QApplication::translate("RoboyDarkRoom", "estimate multi", Q_NULLPTR));
        lighthouse_4->setText(QApplication::translate("RoboyDarkRoom", "lighthouse 2", Q_NULLPTR));
        x_27->setText(QApplication::translate("RoboyDarkRoom", "tilt horizontal", Q_NULLPTR));
        lighthouse_phase_horizontal_2->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        lighthouse_phase_vertical_2->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        x_28->setText(QApplication::translate("RoboyDarkRoom", "curve horizontal", Q_NULLPTR));
        lighthouse_tilt_horizontal_2->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        x_29->setText(QApplication::translate("RoboyDarkRoom", "phase horizontal", Q_NULLPTR));
        lighthouse_tilt_vertical_2->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        x_30->setText(QApplication::translate("RoboyDarkRoom", "phase vertical", Q_NULLPTR));
        lighthouse_curve_horizontal_2->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        x_31->setText(QApplication::translate("RoboyDarkRoom", "tilt vertical", Q_NULLPTR));
        x_32->setText(QApplication::translate("RoboyDarkRoom", "curve vertical", Q_NULLPTR));
        lighthouse_curve_vertical_2->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        x_33->setText(QApplication::translate("RoboyDarkRoom", "gibphase horizontal", Q_NULLPTR));
        lighthouse_gibphase_horizontal_2->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        lighthouse_gibphase_vertical_2->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        x_34->setText(QApplication::translate("RoboyDarkRoom", "gibphase vertical", Q_NULLPTR));
        lighthouse_gibmag_vertical_2->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        lighthouse_gibmag_horizontal_2->setText(QApplication::translate("RoboyDarkRoom", "not available", Q_NULLPTR));
        x_35->setText(QApplication::translate("RoboyDarkRoom", "gibmag horizontal", Q_NULLPTR));
        x_36->setText(QApplication::translate("RoboyDarkRoom", "gibmag vertical", Q_NULLPTR));
        estimate_lighthouse_2->setText(QApplication::translate("RoboyDarkRoom", "estimate for lighthouse 2", Q_NULLPTR));
        tabWidget->setTabText(tabWidget->indexOf(tab_5), QApplication::translate("RoboyDarkRoom", "calibration", Q_NULLPTR));
        remove_tracked_object->setText(QApplication::translate("RoboyDarkRoom", "-", Q_NULLPTR));
        add_tracked_object->setText(QApplication::translate("RoboyDarkRoom", "+", Q_NULLPTR));
        label_9->setText(QApplication::translate("RoboyDarkRoom", "tracked Objects", Q_NULLPTR));
    } // retranslateUi

};

namespace Ui {
    class RoboyDarkRoom: public Ui_RoboyDarkRoom {};
} // namespace Ui

QT_END_NAMESPACE

#endif // UI_DARKROOM_RQT_H
