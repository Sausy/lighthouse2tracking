// Auto-generated. Do not edit!

// (in-package roboy_cognition_msgs.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;

//-----------------------------------------------------------

class OrderIceCreamGoal {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.flavors = null;
      this.scoops = null;
    }
    else {
      if (initObj.hasOwnProperty('flavors')) {
        this.flavors = initObj.flavors
      }
      else {
        this.flavors = [];
      }
      if (initObj.hasOwnProperty('scoops')) {
        this.scoops = initObj.scoops
      }
      else {
        this.scoops = [];
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type OrderIceCreamGoal
    // Serialize message field [flavors]
    bufferOffset = _arraySerializer.string(obj.flavors, buffer, bufferOffset, null);
    // Serialize message field [scoops]
    bufferOffset = _arraySerializer.int32(obj.scoops, buffer, bufferOffset, null);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type OrderIceCreamGoal
    let len;
    let data = new OrderIceCreamGoal(null);
    // Deserialize message field [flavors]
    data.flavors = _arrayDeserializer.string(buffer, bufferOffset, null)
    // Deserialize message field [scoops]
    data.scoops = _arrayDeserializer.int32(buffer, bufferOffset, null)
    return data;
  }

  static getMessageSize(object) {
    let length = 0;
    object.flavors.forEach((val) => {
      length += 4 + val.length;
    });
    length += 4 * object.scoops.length;
    return length + 8;
  }

  static datatype() {
    // Returns string type for a message object
    return 'roboy_cognition_msgs/OrderIceCreamGoal';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return 'c1f1cb719f39dc24da6159a391bbf364';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    # luigi sends ice cream order
    # number of scoops at position i corresponds to flavor at position i
    string[] flavors
    int32[] scoops
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new OrderIceCreamGoal(null);
    if (msg.flavors !== undefined) {
      resolved.flavors = msg.flavors;
    }
    else {
      resolved.flavors = []
    }

    if (msg.scoops !== undefined) {
      resolved.scoops = msg.scoops;
    }
    else {
      resolved.scoops = []
    }

    return resolved;
    }
};

module.exports = OrderIceCreamGoal;
