;; Auto-generated. Do not edit!


(when (boundp 'roboy_cognition_msgs::OrderIceCreamResult)
  (if (not (find-package "ROBOY_COGNITION_MSGS"))
    (make-package "ROBOY_COGNITION_MSGS"))
  (shadow 'OrderIceCreamResult (find-package "ROBOY_COGNITION_MSGS")))
(unless (find-package "ROBOY_COGNITION_MSGS::ORDERICECREAMRESULT")
  (make-package "ROBOY_COGNITION_MSGS::ORDERICECREAMRESULT"))

(in-package "ROS")
;;//! \htmlinclude OrderIceCreamResult.msg.html


(defclass roboy_cognition_msgs::OrderIceCreamResult
  :super ros::object
  :slots (_success _error_message ))

(defmethod roboy_cognition_msgs::OrderIceCreamResult
  (:init
   (&key
    ((:success __success) nil)
    ((:error_message __error_message) "")
    )
   (send-super :init)
   (setq _success __success)
   (setq _error_message (string __error_message))
   self)
  (:success
   (&optional __success)
   (if __success (setq _success __success)) _success)
  (:error_message
   (&optional __error_message)
   (if __error_message (setq _error_message __error_message)) _error_message)
  (:serialization-length
   ()
   (+
    ;; bool _success
    1
    ;; string _error_message
    4 (length _error_message)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; bool _success
       (if _success (write-byte -1 s) (write-byte 0 s))
     ;; string _error_message
       (write-long (length _error_message) s) (princ _error_message s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; bool _success
     (setq _success (not (= 0 (sys::peek buf ptr- :char)))) (incf ptr- 1)
   ;; string _error_message
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _error_message (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;;
   self)
  )

(setf (get roboy_cognition_msgs::OrderIceCreamResult :md5sum-) "6fe914479ce03184a758c3f6990c928f")
(setf (get roboy_cognition_msgs::OrderIceCreamResult :datatype-) "roboy_cognition_msgs/OrderIceCreamResult")
(setf (get roboy_cognition_msgs::OrderIceCreamResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# success is send when scooping is finished
# if scooping did not succeed, success is false and an error message should be replied
bool success 
string error_message

")



(provide :roboy_cognition_msgs/OrderIceCreamResult "6fe914479ce03184a758c3f6990c928f")


